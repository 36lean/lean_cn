O:12:"CI_DB_result":8:{s:7:"conn_id";N;s:9:"result_id";N;s:12:"result_array";a:10:{i:0;a:5:{s:2:"id";s:3:"612";s:10:"post_title";s:34:"编译安装带WineTools的WineCVS";s:13:"post_modified";s:10:"1382597229";s:12:"post_content";s:24224:"<p>
	<span class="postbody">Alright, well, i've tried the latest Wine CVS and winetools and I have to say i'm impressed, wine is not too far behind Cedega and I think in the next year Wine might take the step ahead of them. Granted, they deserve to be ahead, they are the creators and Transgaming kind of stole their project and are hogging it for themselves. <br />
好吧，我已经在尝试着用最新的Wine CVS和Winetools了，我不得不说给我印象深刻的是Wine并没落后Cedega太远，我认为明年Wine也许能超越他们。但是，他们的领先也是应该的，他们是创造者，用Transgaming的方式默默地进行他们的项目并完善它。 <br />
<br />
So I present to you all, a howto on how to install the latest Wine CVS, installing wine tools and getting everything you'll need for the road. <br />
因此我将介绍给你全部，一个关于如何安装最新的Wine CVS，如何安装Wine tools和如何得到你所需东西方法的指南。 <br />
<br />
1) Getting The Development Libraries to compile wine: <br />
1) 得到开发库以编译Wine： <br />
<br />
We also need a few development libs to compliment this: <br />
我们需要一些开发库来进行编译： <br />
<br />
xlibs-dev will allow you to compile wine with x support, the reason behind why most compilations of wine fail under Ubuntu. <br />
xlibs-deb 将使你编译的Wine带有x支持，这也是大多数Wine在Ubuntu系统中编译失败的原因。 <br />
</span> 
</p>
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install xlibs-dev <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
If you want OpenGL support, don't forget to get these libs here: <br />
如果你想要OpenGL支持，不要忘了下面这些库： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install xlibmesa-glu-dev <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Heres two other packages that will make it so wine compiles, and are required during the wine compilation, these are the bison and flex packages. <br />
另外还有两个包是Wine编译期间所需要的，它们是bison和flex包。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install bison flex <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
This package here is for winetools, i'll explain this later on. <br />
下面的包是winetools需要的，我稍后再解释。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install libgtk-1.2 libgtk-1.2-common <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
And lastly, we need to get the cvs package to even be able to grab the cvs streight from winehq. <br />
最后，我们需要得到CVS包以便能从Winehq上抓取CVS。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install cvs <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
2) Getting the Wine CVS <br />
2) 得到Wine CVS <br />
<br />
Now we need to pop up a terminal, and lets make a cvs directory. You can do this wherever, but I strongly recommend having one for organization purposes. <br />
现在我们需要打开一个终端，并创建一个CVS目录。你可以在任何地方创建它，但我强烈建议能有组织的创建。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
mkdir cvs <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Lets go to it now. <br />
现在让我们开始吧。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd cvs <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now, that we are in our cvs directory, and have the right packages, lets connect to the wine cvs now. <br />
现在我们在我们的CVS目录中了，并有一个正确的包，让我们现在连接到Wine CVS吧。 <br />
<br />
There are two servers, a US server, and a Europe server, if you are in the U.S. follow the U.S. howto under here on how to connect to the cvs, if you are in Europe, then do the same for the Europe connection. <br />
有两个服务器，美国的和欧洲的。如果你在美国，那么根据美国的说明怎样去连接CVS，如果你在欧洲，那么同样的方式连接欧洲服务器。 <br />
<br />
To be able to connect, you must type these on your command line and when you connect, it will not say anything, do not be worried <br />
为了能连接，你必须在你连接时你的命令行里键入，别担心，它不会有任何问题。 <br />
<br />
How to Connect to the Wine U.S. CVS Server: <br />
怎样连接Wine的美国CVS服务器： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
export CVSROOT=:pserver:cvs@cvs.winehq.org:/home/wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
How to Connect to the Wine Europe Server: <br />
怎样连接Wine的欧洲服务器： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
export CVSROOT=:pserver:cvs@rhlx01.fht-esslingen.de:/home/wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now that we have connected to it, now its time to login <br />
现在我们已经连上了，开始登录： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cvs login <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
the password has and always will be cvs for their cvs login. <br />
在CVS登录时，密码总是cvs。 <br />
<br />
Now that you are logged in, its time to download the wine cvs. <br />
现在你已经登录了，那么接下来就是下载Wine CVS了。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cvs -z 0 checkout wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now it will start downloading a bunch of stuff, depending on your connection will depend on how long it will take, this is about 40 megabytes. <br />
现在开始下载，下载时间依赖于你的连接速度，它大概有40M左右。 <br />
<br />
3) Compiling and installing Wine <br />
3) 编译安装Wine <br />
<br />
Now that we have our wine cvs here now, we need to compile it, lets go to your new wine directory inside your cvs directory. <br />
现在我们已经有了Wine CVS，我们需要对它进行编译，让我们到你CVS目录中的新wine目录中。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now, we need to compile this baby, this is the longest part but the easiest hehe.. <br />
我们需要编译它，这是最花时间的但它也是最容易的。呵呵... <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
./tools/wineinstall <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now it will start the configure script and will ask you a question at the end of the script about logging into root to install wine, just say yes, and let it rock. It will take quite a while, i'm running a AMD 64 3200+ overclocked at 2.3 ghz and it took me about 20 minutes. On my 900 mhz AMD Athlon it took me approx. 50 minutes. So be patient, watch some tv or something. <br />
它开始运行配置脚本并在脚本最后询问你是否以根用户安装Wine，只需回答是，并让它运行。它将花费相当长的时间，我运行的机器，处理器 AMD64 3200+，时钟2.3GHz，花了它大概20分钟左右。而在我们900MHz的AMD Athlon处理器上花了将近50分钟。所以耐心点，去看看电视什么的。 <br />
<br />
Ahh, we have the latest version of wine cvs now compiled, but to install it, ahh wait, it says here to login to root, lets say yes <br />
啊哈，我们现在已经编译好了Wine CVS最新的版本，只需要安装它了，啊等等，它要求根用户权限，让我们回答是。 <br />
<br />
Now it will install the stuff, does not take long a minute or two, and then it will ask you a question about adding in the default wine config at .wine/config <br />
现在它将安装，只需要一到两分钟，然后它会问你是否要在.wine/config文件中添加Wine的配置。 <br />
<br />
Lets say no. We are going to do something more interesting today kids. <br />
回答不。我们打算做更多事。 <br />
<br />
4) Installing Winetools <br />
4) 安装Winetools <br />
<br />
Now, for the fun stuff, finally! right? hehe , lets go download winetools, here is the url: <br />
现在有趣的结束了！是吗？呵呵，让我们下载Winetools，这儿有URL： <br />
<br />
But Before I give you the url, we should just get all linuxy and use wget, screw the browsers , in your home directory just make a temp directory since this directory won't be here very long.... <br />
但在我给你URL之前，我们<span style="color:red;">（should just get all linuxy）</span> 用wget，调节浏览器，在你的家目录中创建临时目录，因为这目录不需要保留很长时间。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
mkdir temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
Lets go to it now. <br />
现在让我们进入它。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd ./temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
And finally, lets download the winetools. <br />
最后，我们下载Winetools。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
wget http://home.comcast.net/~bloodsport/wine/winetools/winetools-211jo.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
This you may notice is off my personal webstorage, why did I do this? Because my links will never die , anyways lets start on installing this beast. <br />
也许你注意是从我的网络硬盘上下载的，为什么要这样做呢？因为我的链接从来就没死过，不管怎样，让我们开始安装吧。 <br />
<br />
Lets extract the new tar.gz file now. <br />
让我们解压新的tar.gz文件。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
tar -xzf winetools-211jo.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
It should had created a new directory called winetools, lets go to it now <br />
它将创建一个叫winetools的新目录，让我们进入它。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd winetools <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
To install it, its simple. <br />
安装它，这很简单。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo sh install.sh <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now its in, thank god right? hehe, lets get out of this temp directory, if you followed my step, just do this. <br />
如果你是按我的步骤进行，只需要做。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd .. <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
One more time. <br />
一到几次 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd .. <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
And now, its time to remove the temp directory to cleanup our mess. <br />
现在，可以删除临时目录以避免混乱。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
rm -rf temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Cleaned, just like that, hehe, well anyway lets rock n roll with winetools. <br />
象那样清除之后，呵呵， <br />
<br />
On your command line, just type wt2 and it should come right up saying something about you using a different version of wine that is not recommended, just click ok, don't worry about that <br />
在你的命令行里，只需要键入wt2，它会提示你使用了一个不被推荐的Wine版本。点击OK，别担心它！ <br />
<br />
The GPL License for the software, and the creator, email him if you want and tell him how awesome his winetools are <br />
对软件和创建者遵循GPL许可证，如果你想告诉创建者他的Winetools如何的话，可以发邮件给他。 <br />
<br />
Just click ok after the intro and now you should see the menu with base setup and all the good stuff we want. Lets start with base setup. <br />
在简介之后点击OK，并在基本安装后就可以看到菜单了，我们选全部组件。让我们开始基本安装。 <br />
<br />
Since we did not create a wine config through the wine install script, which I told you to do this for a reason , and if you didn't follow my instructions, no big deal, we can remove it here, just pop up a terminal and type: <br />
因为在wine安装脚本安装时没创建Wine配置文件，就如我要你所做的那样。如果你没有按照我的步骤处理的话，没关系，我们可以删除它，只需要打开终端并键入： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
rm -rf .wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Done, but if you did follow my instructions, lets continue. <br />
好了，但如果你是按照我的步骤来的话，让我们继续。 <br />
<br />
Create a fake windows drive is the first one <br />
首先创建一个伪Windows驱动 <br />
<br />
It should create everything for you, and don't worry if you see any errors through your time in winetools don't worry about it. <br />
它可以为你创建每一个东西，如果你在运行Winetools时看到错误时，别担心。 <br />
<br />
Next up is DCOM98 and you're probably asking me, why not install the fonts? Reason why, is because the links are dead to the fonts from winetools, it will just hang, try it if you do not believe me hehe, anyways, install DCOM98. <br />
接下来是DCOM98，你可能问我为什么不安装字体呢？原因是因为从winetools到字体的链接是死链接，它会被挂起，如果你不相信我的话，你可以试试，呵呵，无论如何，安装DCOM98。 <br />
<br />
After DCOM98 is installed, it'll go through its regular routine of shutting down wine after its installed and doing a simulated windows reboot. Next up is Internet Explorer 6.0 SP1, just download it for the language you want. And it will install. <br />
在安装了DCOM98之后，在关闭Wine时也将经历日常例程并将模拟窗口重启。下一步是安装下载你所需语言的IE6.0 SP1。 <br />
<br />
After its done, go back to the main menu. <br />
然后返回主菜单 <br />
<br />
Now lets install windows system software, install it in this order: <br />
现在让我们安装Windows系统软件，按下列顺序安装： <br />
<br />
Windows Installer <br />
Microsoft Foundation Classes 4.0 <br />
Visual Basic 5 Runtime <br />
Visual Basic 6 Runtime <br />
Visual C++ run-time English -- or german if you are german. <br />
MDAC 2.8 English -- or german if you once again german <br />
Jet 4.0 SP8 English -- Or german if you have german blood! <br />
Windows Script 5.6 English -- Or German if you can drink 50 gallons of beer and still not pass out. <br />
<br />
HTML Help Update Package <br />
Common Controls 5.0 <br />
<br />
Now that you have them all installed, lets go back to the main menu. <br />
现在你将他们全部安装，让我们回到主菜单。 <br />
<br />
Lets exit... <br />
让我们退出... <br />
<br />
Now what!? What about our great fonts? Yeah yeah... Lets move onto fonts... <br />
什么！？我们主要的字体？是的是的...让我们安装字体 <br />
<br />
5) Installing Windows Fonts <br />
5) 安装Windows字体 <br />
<br />
Now that we have our wine pretty much setup now, we need fonts. I have all the windows fonts you will need uploaded to my storage. I recommend doing this from the command line. <br />
现在我们要把我们的Wine设置得更加漂亮，我们需要字体。在我上传的网络硬盘上有你所需的全部Windows字体。我建议在命令行中执行。 <br />
<br />
Lets make another temp directory first. <br />
首先让我们创建另一个临时目录。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
mkdir temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
Now go there. <br />
进入该目录 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Download the fonts. <br />
下载字体 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
wget http://home.comcast.net/~bloodsport/wine/fonts/winfonts.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now extract the fonts <br />
现在解压字体 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
tar -xzf winfonts.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
time to install them all one by one. I also want to remind everyone, do not install the andale32.exe it fails on wine for some reason, but you can try it if you want. <br />
然后一个个地安装它们。我也想提醒每个人，不要安装andale32.exe，基于某种原因，它在wine上不能成功安装，但如果你想的话，可以试试。 <br />
<br />
To install them you will need to do this: <br />
安装他们你需要执行： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
wine arial32.exe <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
That will come up with a menu, just click ok then it will install it then it will say the font has been successfully installed. Do this with the rest of them. <br />
那将出现在菜单里，点击OK，然后它将被安装，并且提出字体安装成功，并运行剩下来的字体。 <br />
<br />
wine then the name of the font executable. <br />
Wine 然后执行字体名。 <br />
<br />
When you are done, I am proud to say, you have a full blown wine install with the latest cvs, was it that hard? No, just time consuming and it looks longer than it really is because I talked too much on the HOWTO <br />
当你完成后，我可以自豪的说，你已经用最新的CVS进行了一个完整的Wine安装了，它难吗？不，它只要费时间，它看上去比实际更长，因为我在这个指南里说得太多了。</span>";s:11:"post_banner";s:69:"http://127.0.0.1/lean/admincp/uploads/photos/20131024084704387485.jpg";}i:1;a:5:{s:2:"id";s:3:"611";s:10:"post_title";s:15:"开发者资源";s:13:"post_modified";s:10:"1382521048";s:12:"post_content";s:6313:"<p>
	<span class="postbody">DeveloperResources <br />
开发者资源 <br />
Building packages for Ubuntu <br />
为Ubuntu构建包 <br />
* Set the target suite in debian/changelog to be 'hoary'. e.g. "dch -D hoary" <br />
* 在Debian中设置目的站点/改变成‘Hoary’的日志。如“dch -D hoary” <br />
* When working with a package which originated in Debian, use a version number derived from the Debian version number with ubuntuappended. i.e. Debian 1.0-2 becomes 1.0-2ubuntu1, followed by 1.0-2ubuntu2, etc. <br />
* 起初在Debian中使用源于Debian版本号创建的包，在Ubuntu中使用被会附加Ubuntu&lt;修订号&gt;。如Debian 1.0-2会变成1.0-2ubuntu1，以后就是1.0-2ubuntu2，等等。 <br />
* Make source-only uploads, i.e. use "dpkg-buildpackage -S" <br />
* 创造上载源文件，如使用“dpkg-buildpackage -S” <br />
* Once you have created your packages, see [Uploads] for how to upload <br />
* 如果你已经创建了你的包文件，如何上传请参见［Uploads］ <br />
* You may want to build them in a <span>［DebootstrapChroot］</span> <br />
* 你也许想在<span>［DebootstrapChroot］</span>环境下创建它们 <br />
* You may also build packages using <span>［BuildDaemons］ </span><br />
* 你也许也想使用<span> ［BuildDaemons］ </span>来创建包文件 <br />
* New to packaging? Read <span>Debian New Maintainer Guide</span> <br />
* 现在就打包？请参见<span>Debian新维护者指南</span> <br />
* Also see <span>CDBS Tutorial </span>. <br />
* 也可以参见 <span>CDBS 教程 </span><br />
Package archive <br />
包文件集 <br />
* Information about the archive and its mirrors can be found on the [Archive] page <br />
* 文件集的相关信息和它的镜像可以在[Archive]页找到 <br />
* <span>The morgue</span> contains old versions of packages which have been removed or superseded <br />
* <span>The morgue</span> 包含了已经被删除或取代的老版本包 <br />
* You can <span>search for a package in various Ubuntu releases</span> <br />
* 你可以<span>搜索不同Ubuntu发行版本中的包</span> <br />
Seed management <br />
种子管理 <br />
* The official seed lists are available here: <span>http://people.ubuntu.com/~cjwatson/seeds/</span> <br />
* 官方种子列表在： <span>http://people.ubuntu.com/~cjwatson/seeds/</span> <br />
* Germinate output for hoary is available here: <span>http://people.ubuntulinux.org/~cjwatson/germinate-hoary-output/</span> <br />
* Hoary萌芽版本的输出在： <span>http://people.ubuntulinux.org/~cjwatson/germinate-hoary-output/</span> <br />
* <span>SeedManagement</span> explains how these pieces fit together to determine which packages go where <br />
* 种子管理说明这些部件如何装配，以决定包文件到什么地方。 <br />
Build logs <br />
创建日志 <br />
An explanation of the build daemon processing: <span>BuildDaemons</span> <br />
创建守护进程：BuildDaemons的说明 <br />
See whether your package built properly <br />
参见你的包是否适当创建 <br />
* <span>Logs by package name </span><br />
* <span>包名称日志 </span><br />
* <span>Status for each distribution </span><br />
* <span>发布状态日志 </span><br />
* <span>Logs index by date </span><br />
* <span>日期索引日志 </span><br />
Changes <br />
变化 <br />
For each new version of a package which enters the archive, a message is sent to the <span>hoary-changes mailing list</span> <br />
每个新版本的包进入文件集，消息都会发布在<span>hoary-changes 邮件列表</span> <br />
Changelogs for all packages can be found at <span>http://people.ubuntu.com/~mvo/changelogs</span> (this is the source used by update-manager and synaptic). <br />
所有包的改变日志都在<span>http://people.ubuntu.com/~mvo/changelogs</span></span><a href="http://people.ubuntu.com/%7Emvo/changelogs/%5B/url%5D%E4%B8%AD%EF%BC%88%E8%BF%99%E6%98%AF%E4%BD%BF%E7%94%A8update-manager%E5%92%8Csynaptic%E7%9A%84%E6%A0%B9%E6%BA%90%EF%BC%89" target="_blank"></a>中（这是使用update-manager和synaptic的根源） <span class="postbody"><br />
Ongoing merge <br />
发展中的合并 <br />
Automated merging of packages from Debian unstable <br />
从Debian unstable中自动合并包 <br />
* <span>Introduction</span> <br />
* <span>介绍</span> <br />
* <span>Package listings</span> <br />
* <span>包列表</span> <br />
A by-product of the automated merging is a set of patches that denote the current difference between Debian and Ubuntu. These are naively categorised and made publically available <br />
自动合并的副产品就是一连串的表示当前在Debian和Ubuntu间不同的补丁，这些被自然归类并公开发布。 <br />
* <span>Introduction</span> <br />
* <span>介绍</span> <br />
* <span>Package listings</span> <br />
* <span>包列表</span> <br />
Ubuntu traffic <br />
Ubuntu 通讯 <br />
Find out what is happening in the Ubuntu developers' world <br />
发现在Ubuntu开发者世界中发生了什么 <br />
* <span>Latest issue</span> <br />
* <span>最新发布</span> <br />
* <span>Archives of previous issues</span> <br />
* <span>以前发布</span> <br />
Bugzilla <br />
错误 <br />
* <span>Main page</span> <br />
* <span>主页</span> <br />
* More information on <span>BugTracking</span> <br />
* 更多信息在<span>错误跟踪</span> <br />
Security Updates <br />
安全更新 <br />
* <span>SecurityUpdateProcedures</span> details the special procedures for making security uploads <br />
* <span>安全更新过程</span>描述了制造安全上载的特定过程。 <br />
Broken packages <br />
破损包 <br />
* Britney output (a report of uninstallable packages) can be found here: [url] <span>http://people.ubuntulinux.org/~cjwatson/testing/</span> <br />
* Britney output（一个不能安装包的报告）可以在： <span>http://people.ubuntulinux.org/~cjwatson/testing/</span> 找到</span> 
</p>
<p>
	本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588221">http://firehare.blog.51cto.com/809276/588221</a> 
</p>";s:11:"post_banner";s:0:"";}i:2;a:5:{s:2:"id";s:3:"610";s:10:"post_title";s:33:"从现在开始要学习Python了";s:13:"post_modified";s:10:"1382605120";s:12:"post_content";s:688:"<p>
	Python是个好东东，即没有C和C++烦人的指针问题，功能似乎也比PHP要强不少，再重要的是它是纯粹的面向对象语言，语句清晰，容易理解，这对于学习来说有着很大的优势，学习语言的初期都是看别人代码的！ <br />
另一个学习Python的理由是Zope3，功能强大且结构合理，准备在学习Python之后就开始学习Zope3了，这样就可以进行快速开发了！
</p>
<p>
	本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588264">http://firehare.blog.51cto.com/809276/588264</a>
</p>";s:11:"post_banner";s:0:"";}i:3;a:5:{s:2:"id";s:3:"609";s:10:"post_title";s:129:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    Postgres的介绍和安装
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:2476:"
    		  <p><span class="postbody">介绍 <br>
======= <br>
目前Mysql被炒得沸沸扬扬，热火朝天，但我却对大家为什么不用PostgreSQL感到很不理解，甚至很多人都不知道PostgreSQL是什么， PostgreSQL 是一种非常复杂的对象-关系型数据库管理系统（ORDBMS），也是目前功能最强大，特性最丰富和最复杂的自由软件数据库系统。有些特性甚至连商业数据库都不具备。这个起源于伯克利（BSD）的数据库研究计划目前已经衍生成一项国际开发项目，并且有非常广泛的用户。据我了解国内四大国产数据库，其中三个都是基于PostgreSQL开发的！不过不知道为什么大家都对Mysql情有独钟，要知道无论从功能、性能还是软件自由程度而言，Mysql与 PostgreSQL相比简直不是一个数量级的，而且官方中文文档也很齐备。大家可以访问http: //www.pgsqldb.org看看吧，尤其是那篇《PostgreSQL 的昨天、今天和明天》。 <br>
安装 <br>
======== <br>
测试环境：Ubuntu Linux 5.10 （Breezy） <br>
在Ubuntu下安装软件是一种享受，安装PostgreSQL也不例外： <br>
代码: <br>
$sudo apt-get install postgresql-8.0 <br>
这样就安装好了PostgreSQL 8.0了，该安装将自动创建一个缺省的数据库集群（pgsqldb.org中的译法）“main”，且生成一个数据库超级用户postgres。 <br>
接下来就是要对数据库用户及权限进行设置了，首先要得到超级用户postgres的一个Shell，在这里可以通过下面的方式得到： <br>
代码: <br>
$sudo -u postgres sh <br>
在这个Shell中创建一个同你用户相同的数据库用户，在这里我使用firehare，因为这也是我登录Ubuntu的用户名 <br>
代码: <br>
$createuser -A -D firehare <br>
然后为该用户创建一个数据库，在这里我以mydb为例 <br>
[code]$createdb -O firehare mydb <br>
注意以上操作都是在用户postgres的Shell中完成的，然后退出该用户Shell环境，进入自己用户的Shell中。 <br>
[code]$exit[/code] <br>
现在做用firehare用户，你可以通过下面的命令连接到你的mydb数据库中了 <br>
$psql mydb <br>
退出用/q</span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588268">http://firehare.blog.51cto.com/809276/588268</a></p>
    		";s:11:"post_banner";s:0:"";}i:4;a:5:{s:2:"id";s:3:"608";s:10:"post_title";s:122:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    30分钟学会Zope3
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:13013:"
    		  <p style="clear: both">Zope3 In 30 Minutes <br>
三十分钟学会Zope3 <br>
Author: Baiju M <baiju.m.mail></baiju.m.mail><br>
Version: 0.1.4 <br>
Copyright: (C) 2005 Baiju M, Placed under GNU GPL version 2, or (at your option) any later version <br>
翻译：firehare <br>
校正：leal <br>
组织：ubuntu.org.cn <br><span style="font-weight: bold">Contents <br>
目录 <br>
* Why 30? 为什么是30分钟 <br>
* And why should I ...? 为什么我要学... <br>
* Keywords 关键词 <br>
* So let's start... 那么让我们开始 <br>
* BookMarker : Your first Zope3 app BookMarker：你的第一个Zope3应用 <br>
* Interfaces 接口 <br>
* Unit Testing 单元测试 <br>
* Real coding! 正式编码 <br>
* Configuration 配置 <br>
* Just run it <br>
* Views 视图 <br>
* Functional testing 功能测试 <br>
* Now what? 现在学什么？</span> <br>
Important Note: I assume you are using Debian 3.1 (Sarge) or similar systems. <br>
特别注意：我假设你正在使用Debian3.1（Sarge）或相似系统 <br><span style="font-weight: bold">Why 30? <br>
为什么是30分钟</span> <br>
Sorry! Zope3 cannot be introduced in 10 minutes. <br>
很抱歉！Zope3是不可能在10分钟内介绍清楚的 <br><span style="font-weight: bold">And why should I ...? <br>
为什么我要学？</span> <br>
If you are looking for a Pythonic framework for web application development, just continue reading. And I am not going to make a new definition for What is Pythonic?  . Here I will try to answer your "why?" questions. <br>
如果你想为基于Web的应用开发作一个Pythonic的框架，那么请继续。我并不打算对什么是Pythonic作任何新的解释，主要试图回答“为什么”的问题。 <br><span style="font-weight: bold">Keywords <br>
关键词</span> <br>
Python, Zope, Interface, Component, ZCML, ZMI, Adapter, View, Event, Service, Utility, Principal. <br><span style="font-weight: bold">So let's start... <br>
那么让我们开始...</span> <br>
Zope3 is the third generation of Zope, a framework for web applications. You can download Zope 3.1 from <strong><font color="#666666">http://www.zope.org/Products/Zope3</font></strong> . To install untar Zope3 source package, then as root: <br>
Zope3是第三代的Zope，一个Web应用框架。你可以从http://www.zope.org/Products/zope3下载Zope3.1，解压Zope3源包，并以根用户权限运行： <span class="postbody"><br><span style="font-weight: bold">译者的话：</span> <br>
如果是在Ubuntu下，请按下面命令运行： </span><span class="postbody"><br>
After installation you have to make an instance (don't worry! just do it). To do so: <br>
安装完成后，你必须建立一个Zope Instance（别担心！只需照作就行）。命令如下： </span><span class="postbody"><br>
To start Zope3 server, go to your instance directory, then: <br>
然后是启动你的Zope3服务，到你的Instance目录下，然后运行： </span><span class="postbody"><br>
If you get a port error, check check 8080 and 8021 is already used by other programs; for the time being, just stop it. Start your browser , the open <strong><font color="#666666">http://localhost:8080</font></strong> . What you see is the Zope Management Interface (ZMI). ZMI is your Python prompt, hmm... no! Zope prompt, got it?. You can login and look around to see what's happening. If you played enough with ZMI, stop it from terminal (Control + C). <br>
如果你得到一个端口错误，请检查8080和8021端口是否被其他程序占用；暂时停止运行该程序。打开你的浏览器，然后输入http://localhost:8080。你将看到Zope Management Interface（ZMI）。ZMI是你的Python提示符，嗯...不！应该是Zope的提示符，看到了吗？你可以登录进去并且到处点击看看。如果你在ZMI玩够了的话，在终端用Ctrl+C中断它。 <br><span style="font-weight: bold">BookMarker : Your first Zope3 app <br>
BookMarker：你的第一个Zope3应用</span> <br>
Yes! we are going to create a Zope3 application, an online book marker. Our app will display links to websites and a description for each link. <br>
是的！我们打算开始创建一个Zope3应用，一个在线书签。我们的应用将显示到网站的链接和每条链接的描述。 <br>
So, what you have to think about when you start a Zope3 project. Oh! sorry! I can't put it in one sentence, you better learn and practice Extreme Programming <strong><font color="#666666">http://en.wikipedia.org/wiki/Extreme_programming.</font></strong> Anyway, after your initial design, you will write interfaces. Let us hope Python 3.0 will make it much easier. Then you will write unit tests, now your ideas become very concrete!. At last write your real code. You will be satisfied when you implement interfaces one by one and unit tests succeeds!. I have given the source code of BookMarker here: <strong><font color="#666666">boom.tar.bz2</font></strong> <br>
那么，在开始一个Zope3项目前，你得做何准备呢？哦！很抱歉！我没法一言以蔽之，你最好先学习并实践XP（极限编程，一种轻量级的软件开发过程）http://en.wikipedia.org/wiki/Extreme_programming。总之，在你初步设计之后，就将编写接口。让我们期待Python 3.0 会让它变得容易些吧！然后开始编写单元测试，至此你的想法已非常具体！最后编写正式代码。当你一个接一个的实现接口并通过单元测试，你会拥有（前所未有的）满足感！ 我已经在这里给出了BookMarker应用的源代码：<strong><font color="#666666">boom.tar.bz2</font></strong> <br>
Our code will be placed at $HOME/myzope/lib/python/boom <br>
我们的代码将放在$HOME/myzope/lib/python/boom目录中 <br>
First create a file interfaces.py where we will keep our interfaces. Later we will implement these interfaces one by one, with strong support of unit testing. <br>
首先创建一个interfaces.py的文件，我们将在该文件内保存所有接口。后面我们将在单元测试的强力支持下，一个接一个的实现这些接口。 <span style="font-weight: bold"><br>
Interfaces <br>
接口</span> <br>
Here is our interfaces.py: <br>
下面就是我们的interfaces.py: </span><span class="postbody"><br>
Our first interface IMark has two attributes, one is the URL of the site and the other one is the description. Please note, IMark is not a class even though we used Python's class definition. We inherited from Interface to make it an interface. Second one is a container interface, which is an extended IContainer interface. By using this container interface we can persist our data (instances of IMark implementations). We will put all objects of IMark in a container object of IBookMarker. We will implement IMark along with IMarkContained as a constraint interface. So that IMark object will be only contained in an IBookMarker object. <br>
我们的第一个接口IMark有两个属性，一个是站点的URL，另 一个是它的描述。请注意，IMark不是一个类，尽管我们使用了Python的类定义。IMark继承自Interface，因此是个接口。第二个是一个容器接口，它是一个扩展的Icontainer接口。我们可以使用这个容器接口来保存我们的数据（IMark实现的实例）。我们将IMark的所有对象放到IBookMarker的一个容器对象里。我们连同IMarkContained（作为一个约束接口）一起来实现IMark。所以IMark对象只能包含在IBookMarker对象中。 <br><span style="font-weight: bold">Unit Testing <br>
单元测试</span> <br>
Now create tests.py and put the following code there: <br>
现在创建tests.py文件，输入下列语句： </span><span class="postbody"><br>
Actually, we are not written any unit tests here, but this will make our doc tests working automatically.<br>
实际上我们在这里并没有编写任何的单元测试，不过它会自动对我们的文档进行测试 <br>
To run the unit test: <br>
然后运行单元测试 </span><span class="postbody"><br><span style="font-weight: bold">Real coding! <br>
正式编码</span> <br>
Now let's move on to the implementation (bookmarker.py): <br>
现在让我们继续去实现（bookmarker.py） </span><span class="postbody"><br>
We have written doctests along with the implementations. Doctests are accompanied with examples, so it is called example driven unit testing. <br>
我们已经在实现的同时也编写了Doctests，该Doctests是同例子一起的，所以这种实现方式我们称之为事例驱动单元测试 <span style="font-weight: bold"><br>
Configuration <br>
配置</span> <br>
Now configuration (save in configure.zcml): <br>
现在编写配置（保存在configure.zcml文件中）： </span><span class="postbody"><br>
Is it self explanatory? "no...!" then ok! we will discuss Zope Configuration Markup Language (ZCML) briefly later. Actually, if you are familiar with ZCML this configuartion will be more than self explanatory. It will give you an overall idea about the entire application. Now you might think, it is not Pythonic  Hey! think twice!. <br>
它能不言自明（即能够自我解释，XML之类的标记语言都有这个特点）吗？“不...!”好吧，我们将稍后简单的谈谈Zope Configuration Markup Language（ZCML，Zope配置标记语言）。实际上，如果你对ZCML熟悉的话，你会发现这个配置不止是不言自明，它将带给你的是对整个应用的总体思路。现在你可能在想，这并不Pythonic嘛 ，嗨！再想想！ <br><span style="font-weight: bold">Just run it</span> <br>
As the last step to work our application, put the following line in:$HOME/myzope/etc/package-icludes/boom-configure.zcml: <br>
最后一步就是要让我们的应用运行起来，在文件$HOME/myzope/etc/package-icludes/boom-configure.zcml中插入下列行： </span><span class="postbody"><br>
Now you registered your package. <br>
现在你已经注册了你的包。 <br>
Run zope again, then open your browser, add a BookMarker and few book marks. <br>
重新启动Zope，然后打开你的浏览器，添加一个BookMarker和一些书签。 <br>
Now you want to arrange your your book marks in a better way, don't you?. For the time being, just relax, then we will create a view for book marks. <br>
现在，你不想让你的书签排列得更好点吗？先暂时休息一下，之后我们将为书签创建一个视图。 <br><span style="font-weight: bold">Views <br>
视图</span> <br>
Now create a file named browser.py with following code: <br>
现在新建一个名为browser.py的文件，并输入下列代码： </span><span class="postbody"><br>
Then one template (marks.pt): <br>
然后创建一个模板（marks.pt） </span><span class="postbody"><br>
Now by clicking on "Marks" tab you can see all book marks. <br>
现在点击一下“Marks”标签，你就可以看到所有的书签了。 <br>
Ok! this is not the end, just the beginning of your study. <br>
好的！这样可不能算是结束，这仅仅是你学习的开始。 <br><span style="font-weight: bold">Functional testing <br>
功能测试</span> <br>
Let's finish our example writing a functional test for view (ftests.py): <br>
让我们为视图写一个功能测试来结束我们的例子（ftests.py） </span><span class="postbody"><br>
To run the functional test: <br>
然后运行该功能测试： </span><span class="postbody"><span style="font-weight: bold"><br>
Now what? <br>
现在学什么？</span> <br>
Now you can start learning Zope3 in detail, using Zope3 book. Also join zope3-users mailing list. <br>
现在你可以通过Zope3 Book开始详细学习Zope3了。也可以加入到zope3-user邮件列表里。 <br>
There is a good Zope3 quick start guide by Benji York: <strong><font color="#666666">http://www.benjiyork.com/quick_start/</font></strong> <br>
这里有Benji York写的一个不错的Zope3快速入门指南： <strong><font color="#666666">http://www.benjiyork.com/quick_start/</font></strong> <br>
A good introductory book is also available in print, visit: <strong><font color="#666666">http://worldcookery.com/</font></strong> <br>
还有一本已出版的介绍性图书，很不错，请访问： <strong><font color="#666666">http://worldcookery.com/</font></strong> <br>
Just one more thing: I want to improve this document, so don't hesitate to write your feedback to: baiju.m.mail AT gmail.com <br>
还有一点：我想不断完善这份文档，因此有何意见/建议千万别犹豫，请发送到： <strong><font color="#666666">baiju.m.mail@gmail.com</font></strong></span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588278">http://firehare.blog.51cto.com/809276/588278</a></p>
    		";s:11:"post_banner";s:0:"";}i:5;a:5:{s:2:"id";s:3:"607";s:10:"post_title";s:142:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    JAVA中文支持指南（Vera Yuanti）
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:31791:"
    		  <p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">在本指南中假设你已经安装了</span><span lang="EN-US">ttf-vera-yuan</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">字体包，如果你还没有安装的话，请使用下面的命令：</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo apt-get install ttf-vera-yuan <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">1</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、首先安装</span><span lang="EN-US">Sun</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">的</span><span lang="EN-US">J2SDK1.5</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">包</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo apt-get install sun-j2sdk1.5 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">2</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、然后进入</span><span lang="EN-US">J2SDK</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">的库目录</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">cd /usr/lib/j2sdk1.5-sun/jre/lib <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">3</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、将</span><span lang="EN-US">RedHat</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">的模板将老的</span><span lang="EN-US">fontconfig.properties</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">替换掉，以方便修改，然后对其进行编辑</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo cp fontconfig.RedHat.3.properties.src fontconfig.properties <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo vi fontconfig.properties <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">请修改成以下样式，直接拷贝下来也成</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># @(#)linux.fontconfig.RedHat.3.properties<span style="mso-spacerun: yes">   </span>1.1 <chsdate w:st="on" isrocdate="False" islunardate="False" day="10" month="12" year="2003">03/12/10</chsdate><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Copyright 2003 Sun Microsystems, Inc. All rights reserved. <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Version <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">version=1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Component Font Mappings <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-gb18030=-misc-zysong18030-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-gb18030.motif=-isas-song ti-medium-r-normal--*-%d-*-*-c-*-gb2312.1980-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-big5=-arphic technology co.-ar pl mingti2l big5-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-big5.motif=-<city w:st="on"><place w:st="on">taipei</place></city>-fixed-medium-r-normal--*-%d-*-*-c-*-big5-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.lucida=-b&amp;h-lucidasans-medium-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># </span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span><span lang="EN-US">===== <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-gb18030=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-gb18030.motif=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-gb2312.1980-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-big5=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-big5.motif=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-gb18030.2000-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># =====</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.latin-1=-b&amp;h-lucidabright-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.latin-1.motif=-b&amp;h-luxi serif-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.latin-1=-b&amp;h-lucidabright-demibold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.latin-1.motif=-b&amp;h-luxi serif-bold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.latin-1=-b&amp;h-lucidabright-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.latin-1.motif=-b&amp;h-luxi serif-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.latin-1=-b&amp;h-lucidabright-demibold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.latin-1.motif=-b&amp;h-luxi serif-bold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.latin-1=-b&amp;h-lucidasans-medium-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.latin-1.motif=-b&amp;h-luxi sans-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.latin-1=-b&amp;h-lucidasans-bold-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.latin-1.motif=-b&amp;h-luxi sans-bold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.latin-1=-b&amp;h-lucidasans-medium-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.latin-1.motif=-b&amp;h-luxi sans-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.latin-1=-b&amp;h-lucidasans-bold-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.latin-1.motif=-b&amp;h-luxi sans-bold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.latin-1=-b&amp;h-lucidatypewriter-medium-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.latin-1.motif=-b&amp;h-luxi mono-medium-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.latin-1=-b&amp;h-lucidatypewriter-bold-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.latin-1.motif=-b&amp;h-luxi mono-bold-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.latin-1=-b&amp;h-lucidatypewriter-medium-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.latin-1.motif=-b&amp;h-luxi mono-medium-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.latin-1=-b&amp;h-lucidatypewriter-bold-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.latin-1.motif=-b&amp;h-luxi mono-bold-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.latin-1=-b&amp;h-lucidasans-medium-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.latin-1.motif=-b&amp;h-luxi sans-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.latin-1=-b&amp;h-lucidasans-bold-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.latin-1.motif=-b&amp;h-luxi sans-bold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.latin-1=-b&amp;h-lucidasans-medium-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.latin-1.motif=-b&amp;h-luxi sans-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.latin-1=-b&amp;h-lucidasans-bold-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.latin-1.motif=-b&amp;h-luxi sans-bold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.latin-1=-b&amp;h-lucidatypewriter-medium-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.latin-1.motif=-b&amp;h-luxi mono-medium-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.latin-1=-b&amp;h-lucidatypewriter-bold-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.latin-1.motif=-b&amp;h-luxi mono-bold-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.latin-1=-b&amp;h-lucidatypewriter-medium-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.latin-1.motif=-b&amp;h-luxi mono-medium-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.latin-1=-b&amp;h-lucidatypewriter-bold-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.latin-1.motif=-b&amp;h-luxi mono-bold-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Search Sequences <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts=latin-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.Big5=latin-1,chinese-big5 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.x-euc-jp-linux=latin-1,japanese-x0208 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.EUC-KR=latin-1,korean <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.GB18030=latin-1,chinese-gb18030 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.fallback=lucida,chinese-big5,chinese-gb18030,japanese-x0208,korean <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># <place w:st="on"><placename w:st="on">Exclusion</placename><placetype w:st="on">Ranges</placetype></place><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">exclusion.japanese-x0208=0390-03d6,2200-22ef,2701-27be <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Font File Names <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-arphic_technology_co.-ar_pl_mingti2l_big5-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/zh_TW/TrueType/bsmi00lp.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-baekmuk_batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/ko/TrueType/batang.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-baekmuk_gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/ko/TrueType/gulim.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-kochi_gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0=/usr/share/fonts/ja/TrueType/kochi-gothic-subst.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-kochi_mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0=/usr/share/fonts/ja/TrueType/kochi-mincho-subst.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-zysong18030-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/zh_CN/TrueType/zysong.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># AWT X11 font paths <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.latin-1=/usr/X11R6/lib/X11/fonts/Type1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.chinese-big5=/usr/share/fonts/zh_TW/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.chinese-gb18030=/usr/share/fonts/zh_CN/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.japanese-x0208=/usr/share/fonts/ja/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.korean=/usr/share/fonts/ko/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># </span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span><span lang="EN-US">===== <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-vera_sans_yuanti-medium-r-normal--*-%d-*-*-*-*-iso10646-1=/usr/share/fonts/truetype/ttf-vera-yuan/VeraSansYuanTi-Regular.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-vera_sans_yuanti-medium-r-normal--*-%d-*-*-*-*-gb2312.1980-0=/usr/share/fonts/truetype/ttf-vera-yuan/VeraSansYuanTi-Regular.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-vera_sans_yuanti-medium-r-normal--*-%d-*-*-*-*-gb18030.2000-0=/usr/share/fonts/truetype/ttf-vera-yuan/VeraSansYuanTi-Regular.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># =====</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">4</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、下面进行测试，试运行下面的命令：</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">/usr/lib/j2sdk1.5-sun/bin/java -jar /usr/lib/j2sdk1.5-sun/demo/jfc/FileChooserDemo/FileChooserDemo.jar <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">如果点击浏览可以看到中文而不是方框的话，那么恭喜你，你成功了！</span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588298">http://firehare.blog.51cto.com/809276/588298</a></p>
    		";s:11:"post_banner";s:0:"";}i:6;a:5:{s:2:"id";s:3:"606";s:10:"post_title";s:160:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    X300等低端ATI显卡在Dapper的Gnome上使用XGL指南
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:5301:"
    		  <p><span class="postbody">官方文档中的 Problematic Hardware 小节中有以下这么一节文字： <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">
<br>
            * ATI Radeon Mobility M6 LY using DRI drivers <br>
            drawing artifacts and occasional flickering <br>
            * Intel i815, i845, i855 <br>
            Too old, Xgl works, but compiz will not work. Maybe a compatibility layer is added later. <br>
            * ATI Technologies Inc RV280 (5961) [Radeon 9200] (no hardware acceleration using fglrx 8.22.5 drivers) <br>
            * ATI Radeon X300, X600, and X700 do not seem to work at all with fglrx 8.23.7. Expect machine crashes <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
其中就提到了 ATI X300等显卡在运行XGL时会造成死机，我的IBM T43也是如此，不过在网上疯狂找了一通帖子之后，终于解决了这个问题，写下来以供大家参考，也算是提供了一条思路： <br>
1、首先是要使ATI X300等显卡支持 3D 了，在通常安装中，ATI显卡是不会自动支持3D的，我的方法是： <br><br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">
<br>
            sudo apt-get install xorg-driver-fglrx <br>
            echo fglrx | sudo tee -a /etc/modules <br>
            （这一步就是在 /etc/modules 文件中添加添加一行 fglrx，如果有的话，就可以忽略） <br><br>
            sudo vi /etc/X11/xorg.conf <br>
            找到"ati"并将其改成"fglrx"， <br><br>
            sudo reboot <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
2、重启之后，进入Gnome，在终端输入以下命令： <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">
<br>
            fglrxinfo <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br>
如果出现ATI字样，说明一切正常，否则请<span style="line-height: normal; font-size: 18px"><span style="color: red">切记不要继续下去</span></span>。如果你想进一步测试显卡性能的话，可以使用fgl_glxgears 命令 <br><br>
3、安装XGL <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">sudo apt-get install xserver-xgl compiz-gnome libglitz1 libglitz-glx1 libgl1-mesa libgl1-mesa-dri</td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
后面两个包如果你的缺省安装的GNOME的话，是已经装好的，不过为防有人自定义安装 GNOME，就加上去了。 <br><br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">sudo vi /etc/gdm/gdm.conf-custom <br>
            [servers] <br>
            # Override display 1 to use Xgl (DISPLAY 1 IMPORTANT FOR ATI FGLRX). <br>
            1=Xgl <br><br>
            [server-Xgl] <br>
            name=Xgl server <br>
            command=/usr/bin/Xgl :1 -fullscreen -ac -accel glx:pbuffer -accel xv:pbuffer <br>
            flexible=true <br><br>
            sudo vi /etc/gdm/gdm.conf <br>
            #0=Standard <br>
            1=Standard <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
然后 <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">vi .gnomerc <br>
            gnome-window-decorator &amp; <br>
            compiz --replace gconf decoration wobbly fade minimize cube rotate zoom scale move resize place menu switcher &amp;</td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
这样就做好了XGL部分了，但是如果这时你重启的话，你会发现你的机器在进入GNOME后几秒就会死机，甚至在GDM界面就会死机，为了避免这个，你需要在/etc/X11/xorg.conf 文件中添加红色部分一句： <br><br>
Section "Device" <br>
Identifier "ATI Technologies, Inc. Radeon Mobility M300 (M22)" <br>
Driver "fglrx" <br>
BusID "PCI:1:0:0" <br><span style="color: red">Option "KernelModuleParm" "agplock=0"</span> <br>
EndSection <br><br>
这样之后，你就重启吧，然后，欢迎你进入3D桌面时代！</span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/587140">http://firehare.blog.51cto.com/809276/587140</a></p>
    		";s:11:"post_banner";s:0:"";}i:7;a:5:{s:2:"id";s:3:"605";s:10:"post_title";s:128:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    Seam开发环境的搭建
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:5976:"
    		  <p>一、Seam开发环境的搭建</p>
<p>Seam开发环境的搭建包含以下几项内容：</p>
<p> </p>
<ol>
<li>Java环境的安装和配置</li>
    <li>JBoss环境的安装和配置</li>
    <li>Ant环境的安装和配置</li>
    <li>Seam环境的安装和配置</li>
    <li>Eclipse环境及JBoss Tools 插件的安装和配置</li>
</ol>
<p> </p>
<p>二、Java环境的安装和配置</p>
<p>1、下载JDK</p>
<p>http://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/VerifyItem-Start/jdk-6u22-windows-i586.exe?BundledLineItemUUID=zOuJ_hCwbWAAAAErZYYAHvtE&amp;OrderID=7H.J_hCwTnwAAAErWIYAHvtE&amp;ProductID=c66J_hCwkI4AAAErIFJuIQy3&amp;FileName=/jdk-6u22-windows-i586.exe</p>
<p>2、运行下载下来的 jdk-6u22-windows-i586.exe文件，安装Java SDK</p>
<p>3、设置全局系统变量（我的电脑--&gt;属性--&gt;高级--&gt;环境变量），添加JAVA_HOME变量（值为JDK的安装路径）和CLASS_PATH（值为.;%JAVA_HOME%\lib），并在Path中添加“;%JAVA_HOME%\bin; %JAVA_HOME%\jre\bin”，然后重启系统。</p>
<p>配置系统变量的说明：</p>
<p>1)JAVA_HOME变量：它指向jdk的安装目录，Eclipse/NetBeans/Tomcat等软件就是通过搜索JAVA_HOME变量来找到并使用安装好的jdk。</p>
<p>2)CLASSPATH变量：作用是指定类搜索路径，要使用已经编写好的类，前提当然是能够找到它们了，JVM就是通过CLASSPTH来寻找类的。在这里，为了方便起见，要把当前目录“.”也加入到该变量中。</p>
<p>3)PATH变量：作用是指定命令搜索路径，在i命令行下面执行命令如javac编译java程序时，它会到PATH变量所指定的路径中查找看是否能找到相应的命令程序。我们需要把jdk安装目录下的bin目录增加到现有的PATH变量中，bin目录中包含经常要用到的可执行文件如javac/java/javadoc等待，设置好PATH变量后，就可以在任何目录下执行javac/java等工具了。</p>
<p>4、测试系统变量是否生效，可在命令行中敲入 java 和 javac，如果没有出错信息则表示Java配置正常。</p>
<p>三、JBOSS环境的安装和配置</p>
<p>1、下载 JBOSS</p>
<p>http://sourceforge.net/projects/jboss/files/JBoss/JBoss-5.1.0.GA/jboss-5.1.0.GA-jdk6.zip/download</p>
<p>2、解压下载下来的jboss-5.1.0.GA-jdk6.zip文件到指定的目录，这样就完成JBoss的安装了。（注意：解压目录最好不要有空格，否则运行容易出现异常）</p>
<p>3、设置全局系统变量（我的电脑--&gt;属性--&gt;高级--&gt;环境变量），添加JBOSS_HOME变量（值为解压JBOSS的目录），重启系统后，JBoss环境就安装和配置好了</p>
<p>四、Ant环境的安装和配置</p>
<p>1、下载 Apache Ant</p>
<p>http://labs.renren.com/apache-mirror//ant/binaries/apache-ant-1.8.1-bin.zip</p>
<p>2、解压下载下来的apache-ant-1.8.1-bin.zip文件到指定的目录，这样就完成Ant的安装了。（注意：解压目录最好不要有空格，否则运行容易出现异常）</p>
<p>3、设置全局系统变量（我的电脑--&gt;属性--&gt;高级--&gt;环境变量），添加ANT_HOME变量（值为解压ANT的目录），并在Path中添加“;%ANT_HOME%\ bin”，重启系统后，Ant环境就安装和配置好了</p>
<p>五、Seam环境的安装和配置</p>
<p>1、下载 JBoss Seam</p>
<p>http://sourceforge.net/projects/jboss/files/JBoss%20Seam/2.2.0.GA/jboss-seam-2.2.0.GA.zip/download</p>
<p>2、解压下载下来的jboss-seam-2.2.0.GA.zip到指定的目录，这样就完成了Seam的安装了。（注意：解压目录最好不要有空格，否则运行容易出现异常）</p>
<p>3、接着在Seam的根目录下的 build.properties 文件中正确设定JBoss的安装路径，建议使用UltraEdit工具修改（不要转换成DOS格式），如下所示添加以下行即可：</p>
<p>jboss.home D:\\jboss-5.1.0.GA</p>
<p>这样Seam环境就安装和配置好了</p>
<p>六、Eclipse环境及JBoss Tools 插件的安装和配置</p>
<p>1、下载Eclipse IDE for Java EE Developers</p>
<p>http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/helios/SR1/eclipse-jee-helios-SR1-win32.zip</p>
<p>2、解压运行下载下来的eclipse-jee-helios-SR1-win32.zip文件到指定目录</p>
<p>3、双击指定目录中的Eclipse.exe文件，运行Eclipse IDE</p>
<p>4、Help-&gt;Install New Software…，点击Add…，添入 JBoss Tools Updates和安装网址http://download.jboss.org/jbosstools/updates/development/，确定后，选择All JBoss Tools 3.2.0，等待安装完成重启Eclipse IDE后，即可实现JBoss Tools的安装和配置</p>
<p>5、配置Eclipse IDE，使其能管理JBoss服务的开启和停止。点击右下框架中的Server标签，右键New-&gt;Server，选择JBoss AS 5.1.0，在Server runtime Environment 文本框的右边点击Add，Home Directory选择JBoss的安装目录，JRE选择JRE6，然后点击Finish，结束服务器运行时环境的配置，然后再点击Finish，完成服务器的添加。</p>
<p>6、由于Sun的JVM运行JBoss服务器的时候，常常会报“内存不足”的错误，所以为了避免JVM过早出现问题继而导致JBoss服务器出现问题，应该在IDE中JBoss应用服务器运行时配置的VM选项（双击新添加的JBoss服务器，点击Open launch configuration）或者直接在JBoss服务器根目录下的bin/run.conf中提供以下参数：</p>
<p>-Xms128m -Xmx512m -XX:MaxPermSize=512m -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -XX:+UseConcMarkSweepGC -XX:+CMSPermGenSweepingEnabled -XX:+CMSClassUnloadingEnabled -Xverify:none </p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/586513">http://firehare.blog.51cto.com/809276/586513</a></p>
    		";s:11:"post_banner";s:0:"";}i:8;a:5:{s:2:"id";s:3:"604";s:10:"post_title";s:141:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    使用Seam-gen生成基础项目骨架
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:9405:"
    		  <p>Seam-gen 有两种版本：命令行脚本和IDE插件（在开发环境搭建一文中安装的Eclipse插件Jboss Tools套件中就包含着该IDE插件），但由于Seam-gen命令行版本是Ant的一个包装，通过它生成的项目不论是通过命令行还是能过IDE都可以启动，因此确定使用Seam-gen命令行版本来生成基础项目骨架。</p>
<p>进行Seam解压目录，存在两个脚本：seam和seam.bat，它们分别用于Linux/Unix平台和Windows平台。在命令行控制台中，输入seam help可以看seam-gen的简单概要。一般来说使用Seam-gen生成基础项目骨架只需要四步，它们分别是：</p>
<p>seam setup<span style="white-space: pre"> </span>输入项目原型和数据库信息</p>
<p>seam create-project<span style="white-space: pre"> </span>创建基础项目结构</p>
<p>seam generate<span style="white-space: pre"> </span>反向工程数据库，创建管理数据库的CRUD程序</p>
<p>seam explode<span style="white-space: pre"> </span>将应用程序部署到JBoss应用服务器</p>
<p>一、收集项目信息（输入项目原型和数据库信息）</p>
<p>Seam setup会发出一系列的问题，让seam-gen去收集它需要的信息，才能创建项目。每一个问题都由3部分组成：问题、当前值和一个有效回复列表（如果有的话）。对于每个问题，都需要输入一个回复并按回车键，然后继续下一个问题，为进入下一步收集需要的信息。</p>
<p>$ ./seam setup</p>
<p>SEAM_HOME: /opt/jboss/jboss-seam-2.2.0.GA</p>
<p>Using seam-gen sources from: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen</p>
<p>Buildfile: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen/build.xml</p>
<p>init:</p>
<p>setup:</p>
<p>     [echo] Welcome to seam-gen 2.2.0.GA :-)</p>
<p>     [echo] Answer each question or hit ENTER to accept the default (in brackets)</p>
<p>     [echo] </p>
<p>//输入项目目录</p>
<p>    [input] Enter the directory where you want the project to be created (should not contain spaces) [/home/firehare/项目/lpms] [/home/firehare/项目/lpms]</p>
<p>//输入JBOSS应用服务器相关信息</p>
<p>    [input] Enter your JBoss AS home directory [/opt/jboss/jboss-5.1.0.GA] [/opt/jboss/jboss-5.1.0.GA]</p>
<p>    [input] Enter your JBoss AS domain [default] [default]</p>
<p>//输入GlassFish服务器相关信息（由于我们不使用该服务，所以无需填写）</p>
<p>    [input] Enter your GlassFish V2 or V3 home directory (Ignore if you aren't deploying to GlassFish) [/opt/glassfish/glassfish-3.0.1] [/opt/glassfish/glassfish-3.0.1]</p>
<p>    [input] Enter your GlassFish domain (Ignore if you aren't deploying to GlassFish) [domain1] [domain1]</p>
<p>//输入项目名单</p>
<p>    [input] Enter the project name [lpms] [lpms]</p>
<p>     [echo] Accepted project name as: lpms</p>
<p>//采用RichFaces界面（ICEfaces界面性能好一些，但为了能够使用JBossTools插件中的RichFaces，暂用RichFaces界面）</p>
<p>    [input] Do you want to use ICEfaces instead of RichFaces? [n] (y, [n])</p>
<p>    [input] skipping input as property icefaces.home.new has already been set.</p>
<p>//选择RichFaces界面的皮肤</p>
<p>    [input] Select a RichFaces skin [blueSky] ([blueSky], classic, darkX, deepMarine, DEFAULT, emeraldTown, glassX, japanCherry, laguna, ruby, wine)</p>
<p>//确定该项目是做为WAR部署</p>
<p>    [input] Is this project deployed as an EAR (with EJB components) or a WAR (with no EJB support)? [war] (ear, [war])</p>
<p>//输入Java类的基包名</p>
<p>    [input] Enter the base package name for your Java classes [com.mydomain.lpms] [com.mydomain.lpms]</p>
<p>cn.edu.wzu.cmet.lpms</p>
<p>//输入会话Beans的Java包名</p>
<p>    [input] Enter the Java package name for your session beans [cn.edu.wzu.cmet.lpms.action] [cn.edu.wzu.cmet.lpms.action]</p>
<p>//输入实体Beans的Java包名</p>
<p>    [input] Enter the Java package name for your entity beans [cn.edu.wzu.cmet.lpms.model] [cn.edu.wzu.cmet.lpms.model]</p>
<p>//输入测试的Java包名</p>
<p>    [input] Enter the Java package name for your test cases [cn.edu.wzu.cmet.lpms.test] [cn.edu.wzu.cmet.lpms.test]</p>
<p>//输入数据库类型</p>
<p>    [input] What kind of database are you using? [mysql] (hsql, [mysql], derby, oracle, postgres, mssql, db2, sybase, enterprisedb, h2)</p>
<p>//输入JDBC驱动的目录（由于使用的是linux，所以目录同windows下的不一样，Windows下直接输入mysql JDBC驱动所在的目录）</p>
<p>    [input] Enter the filesystem path to the JDBC driver jar [/usr/share/java/mysql.jar] [/usr/share/java/mysql.jar]</p>
<p>    [input] skipping input as property driver.license.jar.new has already been set.</p>
<p>    [input] Enter the Hibernate dialect for your database [org.hibernate.dialect.MySQLDialect] [org.hibernate.dialect.MySQLDialect]</p>
<p>//输入JDBC驱动类名</p>
<p>    [input] Enter the JDBC driver class for your database [com.mysql.jdbc.Driver] [com.mysql.jdbc.Driver]</p>
<p>//输入JDBC数据源类</p>
<p>    [input] Enter the JDBC DataSource class for your database [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] [com.mysql.jdbc.jdbc2.optional.MysqlDataSource]</p>
<p>//输入数据库JDBC URL</p>
<p>    [input] Enter the JDBC URL for your database [jdbc:mysql://localhost:3306/lpms] [jdbc:mysql://localhost:3306/lpms]</p>
<p>jdbc:mysql://localhost:3306/lpms?useUnicode=true&amp;amp;characterEncoding=utf-8</p>
<p>//输入数据库用户名</p>
<p>    [input] Enter the database username [lpms] [lpms]</p>
<p>//输入数据库密码</p>
<p>    [input] Enter the database password [lpms] [lpms]</p>
<p>    [input] skipping input as property hibernate.default_schema.entered has already been set.</p>
<p>    [input] Enter the database catalog name (Enter '-' to clear previous value) [] []</p>
<p>//是否使用已有数据库</p>
<p>    [input] Are you working with tables that already exist in the database? [y] ([y], n)</p>
<p>    [input] Do you want to recreate the database tables and execute import.sql each time you deploy? [n] (y, [n])</p>
<p>   [delete] Deleting: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen/build.properties</p>
<p>[propertyfile] Creating new property file: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen/build.properties</p>
<p>     [echo] Installing JDBC driver jar to JBoss AS</p>
<p>init:</p>
<p>init-properties:</p>
<p>     [echo] /opt/jboss/jboss-5.1.0.GA</p>
<p>validate-workspace:</p>
<p>validate-project:</p>
<p>settings:</p>
<p>     [echo] JBoss AS home: /opt/jboss/jboss-5.1.0.GA</p>
<p>     [echo] GlassFish home: /opt/glassfish/glassfish-3.0.1</p>
<p>     [echo] Project name: lpms</p>
<p>     [echo] Project location: /home/firehare/项目/lpms/lpms</p>
<p>     [echo] Project type: war</p>
<p>     [echo] IceFaces: n</p>
<p>     [echo] Action package: cn.edu.wzu.cmet.lpms.action</p>
<p>     [echo] Model package: cn.edu.wzu.cmet.lpms.model</p>
<p>     [echo] Test package: cn.edu.wzu.cmet.lpms.test</p>
<p>     [echo] JDBC driver class: com.mysql.jdbc.Driver</p>
<p>     [echo] JDBC DataSource class: com.mysql.jdbc.jdbc2.optional.MysqlDataSource</p>
<p>     [echo] Hibernate dialect: org.hibernate.dialect.MySQLDialect</p>
<p>     [echo] JDBC URL: jdbc:mysql://localhost:3306/lpms</p>
<p>     [echo] Database username: lpms</p>
<p>     [echo] Database password: lpms</p>
<p>     [echo] </p>
<p>     [echo] Type './seam create-project' to create the new project</p>
<p>BUILD SUCCESSFUL</p>
<p>Total time: 1 minute 16 seconds</p>
<p>这样就完成了项目信息的收集工作</p>
<p>二、创建项目结构（创建基础项目结构）</p>
<p>setup命令只是为seam-gen做好创建项目的准备。真要让seam利用模板生成一个项目，还需要执行sean create-project命令。这样seam将创建一个新的项目，并将配置好该项目的一切，同时还配有一个基于Ant构建的，用于编译、测试、打包和部署的应用程序。</p>
<p>三、创建CRUD程序（项目反向工程数据库，生成管理数据库的CRUD程序）</p>
<p>有了基础的项目骨架之后，就可以进行部署了。但如果是基于已有数据库的话，可以先对数据库进行反向工程，使用seam generate命令可以从一个已有数据库的Schema生成JPA实体类，并生成用来管理这些实体的CRUD用户接口。这些实体在Facelets视图模板中渲染，并且为JavaBean动作类所支持。这样就很方便地构建出了应用程序的原型。</p>
<p> 四、项目部署（将应用程序部署到JBoss应用服务器）</p>
<p>应用程序的原型构建好之后，为了让该应用程序启动，需要将其部署到JBoss应用服务器中，在这里为了能够对应用程序进行热部署，使用seam explode命令来进行部署，这样在应用程序更改之后，可以通过重新运行seam explode来进行重新部署（增量热部署）。</p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/586520">http://firehare.blog.51cto.com/809276/586520</a></p>
    		";s:11:"post_banner";s:0:"";}i:9;a:5:{s:2:"id";s:3:"603";s:10:"post_title";s:125:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    Seam的中文化支持
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:6365:"
    		  <p>一、预备知识</p>
<p>Seam的中文化支持是通过资源包文件来实现的。资源包是Java属性元数据格式的一种应用，它以键／值对的形式保存元数据。这些键／值对按照一定的规则进行分组，并绑定到某个bundle名称下。Java将根据bundle名和指定的地域（即local）来查找属性文件。文件名由bundle组成，接着是以一条下划线（_）作为前缀的当前地域，最后是.properties的扩展名。如果找不到当前地域的文件，就会采用以"bundle名.properties"为名的文件。例如：如果bundle名是messages，且当前地域为US English，那么Seam就会按下列搜索顺序来查找资源包文件：</p>
<div>messages_en_US.properties</div>
<div>messages_en.properties</div>
<div>messages.properties</div>
<p>因此要想让Seam支持中文的话，那就必须要有中文资源包文件，根据Seam的搜索约定，必须要在下列文件之一中键值为中文：</p>
<div>messages_zh_CN.properties</div>
<div>messages_zh.properties</div>
<div>messages.properties</div>
<div>另：采用资源包文件不但有利于支持应用程序国际化，而且它还可以很方便地修改输出消息，而不需要在程序源代码中去查找和修改，有利于程序的后期维护和修改。</div>
<div>
<br>
 </div>
<div>二、实现方式</div>
<div>一般来说，Seam在用户登录会话时会生成一个java.util.Locale实例，该实例会以"locale"组件的形式提供给应用程序，Seam会自动通过JSF来判定当前会话的locale。其判定流程按如下顺序进行：</div>
<div>
<div>    如果HTTP请求中有关联locale（如：浏览器的locale），且该locale在faces-config.xml的支持列表中，那么其它会话也使用该locale；</div>
<div>    否则使用在faces-config.xml文件中指定的默认locale；</div>
<div>    否则使用服务器的默认locale。</div>
<div>因此，要想让Seam支持中文，首先需要在faces-config.xml文件（位于项目根目录下的resources/WEB-INF目录）中支持中文，如下所示：</div>
      &lt;locale-config&gt;<br>
         &lt;default-locale&gt;en&lt;/default-locale&gt;<br>
         &lt;supported-locale&gt;bg&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;de&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;en&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;fr&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;it&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;tr&lt;/supported-locale&gt;<br>
         &lt;!-- 中文化支持 --&gt;<br>
         &lt;supported-locale&gt;zh_CN&lt;/supported-locale&gt;<br>
      &lt;/locale-config&gt;<br><br><div>当然，如果稳妥起见，可以将default-locale标签中的en设置成zh_CN（将默认locale指定为简体中文），甚至可以把服务器的默认locale也设为zh_CN。</div>
</div>
<div>
<br>
 </div>
<div>其次在中文资源包中（位于项目根目录下的resources目录）定义一个键／值对（为了方便描述，bundle名采用messages，这样中文资源包文件名就是messages_zh_CN.properties）：</div>
<div> UserName=用户名</div>
<div> Welcome=欢迎</div>
<div>
<br>
 </div>
<div>接着在JSF中声明引入messages资源包，JSF 通过使用 来支持用户界面标签和描述文本的国际化。这个方法同样可以用在Seam应用程序中。如下所示：</div>
<p>    ...</p>
<div>
<div>    xmlns:f="http://java.sun.com/jsf/core"</div>
<div>    xmlns:h="http://java.sun.com/jsf/html"</div>
<div>    ...</div>
<div>    </div>
<div>&lt;f:loadBundle basename="messages" var="msgs"/&gt;</div>
<div>然后，利用EL表达式引用即可：</div>
<div>     #{msgs['UserName']} 或 #{msgs.UserName}</div>
<div>
<br>
 </div>
<div>或者也可以直接利用Seam的 messages 组件用内嵌的EL表达式来显示资源包中键／值对的值。Seam提供了一个 java.util.ResourceBundle （以org.jboss.seam.core.resourceBundle 的名字提供给应用程序）。 你需要通过这个指定的资源包来使你的国际化标签可用。默认情况下，Seam 使用bundle名为messages的资源包， 你需要在 messages.properties、messages_en.properties、messages_zh_CN.properties 等文件中定义你的键／值对，而无需显示使用语句&lt;f:loadBundle/&gt;。</div>
<div>     #{messages['UserName']}</div>
<div>
<br>
 </div>
<div>键值还可以在代码中使用，例如：</div>
<div>    @In ResourceBundle resourceBundle;</div>
<div>    @In private Map messages; <br>
    @In("#{messages['Welcome']}") private String welcomeMessage; </div>
<div>
<br>
 </div>
<div>同样键值还可以组件属性中使用，例如：</div>
<div>&lt;component name=”registration”&gt;<br>
  &lt;property name=”specialtyTypes”&gt;<br>
    &lt;key&gt;DRIVE&lt;/key&gt;&lt;value&gt;#{messages[’specialty.drive’]}&lt;/value&gt;<br>
    &lt;key&gt;CHIP&lt;/key&gt;&lt;value&gt;#{messages[’specialty.drive’]}&lt;/value&gt;<br>
    &lt;key&gt;PUTT&lt;/key&gt;&lt;value&gt;#{messages[’specialty.putt’]}&lt;/value&gt;<br>
    &lt;key&gt;IRON&lt;/key&gt;&lt;value&gt;#{messages[’specialty.iron’]}&lt;/value&gt;<br>
    &lt;key&gt;LOOKS&lt;/key&gt;&lt;value&gt;#{messages[’specialty.looks’]}&lt;/value&gt;<br>
  &lt;/property&gt;<br>
&lt;/component&gt;<br>
 </div>
<div>如果键值是带参数的，可以采取以下两种方式在中文资源包中定义：</div>
<div>
<div>    login.welcome=欢迎您，#{newUser.name}！</div>
<div>    login.welcome=欢迎您，{0}！</div>
<div>第一种定义方式，可以通过EL表达式#{msgs['Welcome']}来显示，第二种定义方式，可以在代码中通过FacesMessages组件来实现，如下面代码所示：</div>
FacesMessages.addFromResourceBundle(“login.welcome”,newUser.getName());</div>
</div>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/586523">http://firehare.blog.51cto.com/809276/586523</a></p>
    		";s:11:"post_banner";s:0:"";}}s:13:"result_object";a:10:{i:0;O:8:"stdClass":5:{s:2:"id";s:3:"612";s:10:"post_title";s:34:"编译安装带WineTools的WineCVS";s:13:"post_modified";s:10:"1382597229";s:12:"post_content";s:24224:"<p>
	<span class="postbody">Alright, well, i've tried the latest Wine CVS and winetools and I have to say i'm impressed, wine is not too far behind Cedega and I think in the next year Wine might take the step ahead of them. Granted, they deserve to be ahead, they are the creators and Transgaming kind of stole their project and are hogging it for themselves. <br />
好吧，我已经在尝试着用最新的Wine CVS和Winetools了，我不得不说给我印象深刻的是Wine并没落后Cedega太远，我认为明年Wine也许能超越他们。但是，他们的领先也是应该的，他们是创造者，用Transgaming的方式默默地进行他们的项目并完善它。 <br />
<br />
So I present to you all, a howto on how to install the latest Wine CVS, installing wine tools and getting everything you'll need for the road. <br />
因此我将介绍给你全部，一个关于如何安装最新的Wine CVS，如何安装Wine tools和如何得到你所需东西方法的指南。 <br />
<br />
1) Getting The Development Libraries to compile wine: <br />
1) 得到开发库以编译Wine： <br />
<br />
We also need a few development libs to compliment this: <br />
我们需要一些开发库来进行编译： <br />
<br />
xlibs-dev will allow you to compile wine with x support, the reason behind why most compilations of wine fail under Ubuntu. <br />
xlibs-deb 将使你编译的Wine带有x支持，这也是大多数Wine在Ubuntu系统中编译失败的原因。 <br />
</span> 
</p>
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install xlibs-dev <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
If you want OpenGL support, don't forget to get these libs here: <br />
如果你想要OpenGL支持，不要忘了下面这些库： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install xlibmesa-glu-dev <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Heres two other packages that will make it so wine compiles, and are required during the wine compilation, these are the bison and flex packages. <br />
另外还有两个包是Wine编译期间所需要的，它们是bison和flex包。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install bison flex <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
This package here is for winetools, i'll explain this later on. <br />
下面的包是winetools需要的，我稍后再解释。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install libgtk-1.2 libgtk-1.2-common <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
And lastly, we need to get the cvs package to even be able to grab the cvs streight from winehq. <br />
最后，我们需要得到CVS包以便能从Winehq上抓取CVS。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo apt-get install cvs <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
2) Getting the Wine CVS <br />
2) 得到Wine CVS <br />
<br />
Now we need to pop up a terminal, and lets make a cvs directory. You can do this wherever, but I strongly recommend having one for organization purposes. <br />
现在我们需要打开一个终端，并创建一个CVS目录。你可以在任何地方创建它，但我强烈建议能有组织的创建。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
mkdir cvs <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Lets go to it now. <br />
现在让我们开始吧。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd cvs <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now, that we are in our cvs directory, and have the right packages, lets connect to the wine cvs now. <br />
现在我们在我们的CVS目录中了，并有一个正确的包，让我们现在连接到Wine CVS吧。 <br />
<br />
There are two servers, a US server, and a Europe server, if you are in the U.S. follow the U.S. howto under here on how to connect to the cvs, if you are in Europe, then do the same for the Europe connection. <br />
有两个服务器，美国的和欧洲的。如果你在美国，那么根据美国的说明怎样去连接CVS，如果你在欧洲，那么同样的方式连接欧洲服务器。 <br />
<br />
To be able to connect, you must type these on your command line and when you connect, it will not say anything, do not be worried <br />
为了能连接，你必须在你连接时你的命令行里键入，别担心，它不会有任何问题。 <br />
<br />
How to Connect to the Wine U.S. CVS Server: <br />
怎样连接Wine的美国CVS服务器： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
export CVSROOT=:pserver:cvs@cvs.winehq.org:/home/wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
How to Connect to the Wine Europe Server: <br />
怎样连接Wine的欧洲服务器： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
export CVSROOT=:pserver:cvs@rhlx01.fht-esslingen.de:/home/wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now that we have connected to it, now its time to login <br />
现在我们已经连上了，开始登录： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cvs login <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
the password has and always will be cvs for their cvs login. <br />
在CVS登录时，密码总是cvs。 <br />
<br />
Now that you are logged in, its time to download the wine cvs. <br />
现在你已经登录了，那么接下来就是下载Wine CVS了。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cvs -z 0 checkout wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now it will start downloading a bunch of stuff, depending on your connection will depend on how long it will take, this is about 40 megabytes. <br />
现在开始下载，下载时间依赖于你的连接速度，它大概有40M左右。 <br />
<br />
3) Compiling and installing Wine <br />
3) 编译安装Wine <br />
<br />
Now that we have our wine cvs here now, we need to compile it, lets go to your new wine directory inside your cvs directory. <br />
现在我们已经有了Wine CVS，我们需要对它进行编译，让我们到你CVS目录中的新wine目录中。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now, we need to compile this baby, this is the longest part but the easiest hehe.. <br />
我们需要编译它，这是最花时间的但它也是最容易的。呵呵... <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
./tools/wineinstall <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now it will start the configure script and will ask you a question at the end of the script about logging into root to install wine, just say yes, and let it rock. It will take quite a while, i'm running a AMD 64 3200+ overclocked at 2.3 ghz and it took me about 20 minutes. On my 900 mhz AMD Athlon it took me approx. 50 minutes. So be patient, watch some tv or something. <br />
它开始运行配置脚本并在脚本最后询问你是否以根用户安装Wine，只需回答是，并让它运行。它将花费相当长的时间，我运行的机器，处理器 AMD64 3200+，时钟2.3GHz，花了它大概20分钟左右。而在我们900MHz的AMD Athlon处理器上花了将近50分钟。所以耐心点，去看看电视什么的。 <br />
<br />
Ahh, we have the latest version of wine cvs now compiled, but to install it, ahh wait, it says here to login to root, lets say yes <br />
啊哈，我们现在已经编译好了Wine CVS最新的版本，只需要安装它了，啊等等，它要求根用户权限，让我们回答是。 <br />
<br />
Now it will install the stuff, does not take long a minute or two, and then it will ask you a question about adding in the default wine config at .wine/config <br />
现在它将安装，只需要一到两分钟，然后它会问你是否要在.wine/config文件中添加Wine的配置。 <br />
<br />
Lets say no. We are going to do something more interesting today kids. <br />
回答不。我们打算做更多事。 <br />
<br />
4) Installing Winetools <br />
4) 安装Winetools <br />
<br />
Now, for the fun stuff, finally! right? hehe , lets go download winetools, here is the url: <br />
现在有趣的结束了！是吗？呵呵，让我们下载Winetools，这儿有URL： <br />
<br />
But Before I give you the url, we should just get all linuxy and use wget, screw the browsers , in your home directory just make a temp directory since this directory won't be here very long.... <br />
但在我给你URL之前，我们<span style="color:red;">（should just get all linuxy）</span> 用wget，调节浏览器，在你的家目录中创建临时目录，因为这目录不需要保留很长时间。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
mkdir temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
Lets go to it now. <br />
现在让我们进入它。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd ./temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
And finally, lets download the winetools. <br />
最后，我们下载Winetools。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
wget http://home.comcast.net/~bloodsport/wine/winetools/winetools-211jo.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
This you may notice is off my personal webstorage, why did I do this? Because my links will never die , anyways lets start on installing this beast. <br />
也许你注意是从我的网络硬盘上下载的，为什么要这样做呢？因为我的链接从来就没死过，不管怎样，让我们开始安装吧。 <br />
<br />
Lets extract the new tar.gz file now. <br />
让我们解压新的tar.gz文件。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
tar -xzf winetools-211jo.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
It should had created a new directory called winetools, lets go to it now <br />
它将创建一个叫winetools的新目录，让我们进入它。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd winetools <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
To install it, its simple. <br />
安装它，这很简单。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
sudo sh install.sh <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now its in, thank god right? hehe, lets get out of this temp directory, if you followed my step, just do this. <br />
如果你是按我的步骤进行，只需要做。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd .. <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
One more time. <br />
一到几次 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd .. <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
And now, its time to remove the temp directory to cleanup our mess. <br />
现在，可以删除临时目录以避免混乱。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
rm -rf temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Cleaned, just like that, hehe, well anyway lets rock n roll with winetools. <br />
象那样清除之后，呵呵， <br />
<br />
On your command line, just type wt2 and it should come right up saying something about you using a different version of wine that is not recommended, just click ok, don't worry about that <br />
在你的命令行里，只需要键入wt2，它会提示你使用了一个不被推荐的Wine版本。点击OK，别担心它！ <br />
<br />
The GPL License for the software, and the creator, email him if you want and tell him how awesome his winetools are <br />
对软件和创建者遵循GPL许可证，如果你想告诉创建者他的Winetools如何的话，可以发邮件给他。 <br />
<br />
Just click ok after the intro and now you should see the menu with base setup and all the good stuff we want. Lets start with base setup. <br />
在简介之后点击OK，并在基本安装后就可以看到菜单了，我们选全部组件。让我们开始基本安装。 <br />
<br />
Since we did not create a wine config through the wine install script, which I told you to do this for a reason , and if you didn't follow my instructions, no big deal, we can remove it here, just pop up a terminal and type: <br />
因为在wine安装脚本安装时没创建Wine配置文件，就如我要你所做的那样。如果你没有按照我的步骤处理的话，没关系，我们可以删除它，只需要打开终端并键入： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
rm -rf .wine <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Done, but if you did follow my instructions, lets continue. <br />
好了，但如果你是按照我的步骤来的话，让我们继续。 <br />
<br />
Create a fake windows drive is the first one <br />
首先创建一个伪Windows驱动 <br />
<br />
It should create everything for you, and don't worry if you see any errors through your time in winetools don't worry about it. <br />
它可以为你创建每一个东西，如果你在运行Winetools时看到错误时，别担心。 <br />
<br />
Next up is DCOM98 and you're probably asking me, why not install the fonts? Reason why, is because the links are dead to the fonts from winetools, it will just hang, try it if you do not believe me hehe, anyways, install DCOM98. <br />
接下来是DCOM98，你可能问我为什么不安装字体呢？原因是因为从winetools到字体的链接是死链接，它会被挂起，如果你不相信我的话，你可以试试，呵呵，无论如何，安装DCOM98。 <br />
<br />
After DCOM98 is installed, it'll go through its regular routine of shutting down wine after its installed and doing a simulated windows reboot. Next up is Internet Explorer 6.0 SP1, just download it for the language you want. And it will install. <br />
在安装了DCOM98之后，在关闭Wine时也将经历日常例程并将模拟窗口重启。下一步是安装下载你所需语言的IE6.0 SP1。 <br />
<br />
After its done, go back to the main menu. <br />
然后返回主菜单 <br />
<br />
Now lets install windows system software, install it in this order: <br />
现在让我们安装Windows系统软件，按下列顺序安装： <br />
<br />
Windows Installer <br />
Microsoft Foundation Classes 4.0 <br />
Visual Basic 5 Runtime <br />
Visual Basic 6 Runtime <br />
Visual C++ run-time English -- or german if you are german. <br />
MDAC 2.8 English -- or german if you once again german <br />
Jet 4.0 SP8 English -- Or german if you have german blood! <br />
Windows Script 5.6 English -- Or German if you can drink 50 gallons of beer and still not pass out. <br />
<br />
HTML Help Update Package <br />
Common Controls 5.0 <br />
<br />
Now that you have them all installed, lets go back to the main menu. <br />
现在你将他们全部安装，让我们回到主菜单。 <br />
<br />
Lets exit... <br />
让我们退出... <br />
<br />
Now what!? What about our great fonts? Yeah yeah... Lets move onto fonts... <br />
什么！？我们主要的字体？是的是的...让我们安装字体 <br />
<br />
5) Installing Windows Fonts <br />
5) 安装Windows字体 <br />
<br />
Now that we have our wine pretty much setup now, we need fonts. I have all the windows fonts you will need uploaded to my storage. I recommend doing this from the command line. <br />
现在我们要把我们的Wine设置得更加漂亮，我们需要字体。在我上传的网络硬盘上有你所需的全部Windows字体。我建议在命令行中执行。 <br />
<br />
Lets make another temp directory first. <br />
首先让我们创建另一个临时目录。 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
mkdir temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
<br />
Now go there. <br />
进入该目录 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
cd temp <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Download the fonts. <br />
下载字体 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
wget http://home.comcast.net/~bloodsport/wine/fonts/winfonts.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
Now extract the fonts <br />
现在解压字体 <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
tar -xzf winfonts.tar.gz <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
time to install them all one by one. I also want to remind everyone, do not install the andale32.exe it fails on wine for some reason, but you can try it if you want. <br />
然后一个个地安装它们。我也想提醒每个人，不要安装andale32.exe，基于某种原因，它在wine上不能成功安装，但如果你想的话，可以试试。 <br />
<br />
To install them you will need to do this: <br />
安装他们你需要执行： <br />
</span> 
<table class="ke-zeroborder" align="center" border="0" cellpadding="3" cellspacing="1" width="90%">
	<tbody>
		<tr>
			<td>
				<span class="genmed"><b>代码:</b></span>
			</td>
		</tr>
		<tr>
			<td class="code">
				<br />
wine arial32.exe <br />
			</td>
		</tr>
	</tbody>
</table>
<span class="postbody"><br />
That will come up with a menu, just click ok then it will install it then it will say the font has been successfully installed. Do this with the rest of them. <br />
那将出现在菜单里，点击OK，然后它将被安装，并且提出字体安装成功，并运行剩下来的字体。 <br />
<br />
wine then the name of the font executable. <br />
Wine 然后执行字体名。 <br />
<br />
When you are done, I am proud to say, you have a full blown wine install with the latest cvs, was it that hard? No, just time consuming and it looks longer than it really is because I talked too much on the HOWTO <br />
当你完成后，我可以自豪的说，你已经用最新的CVS进行了一个完整的Wine安装了，它难吗？不，它只要费时间，它看上去比实际更长，因为我在这个指南里说得太多了。</span>";s:11:"post_banner";s:69:"http://127.0.0.1/lean/admincp/uploads/photos/20131024084704387485.jpg";}i:1;O:8:"stdClass":5:{s:2:"id";s:3:"611";s:10:"post_title";s:15:"开发者资源";s:13:"post_modified";s:10:"1382521048";s:12:"post_content";s:6313:"<p>
	<span class="postbody">DeveloperResources <br />
开发者资源 <br />
Building packages for Ubuntu <br />
为Ubuntu构建包 <br />
* Set the target suite in debian/changelog to be 'hoary'. e.g. "dch -D hoary" <br />
* 在Debian中设置目的站点/改变成‘Hoary’的日志。如“dch -D hoary” <br />
* When working with a package which originated in Debian, use a version number derived from the Debian version number with ubuntuappended. i.e. Debian 1.0-2 becomes 1.0-2ubuntu1, followed by 1.0-2ubuntu2, etc. <br />
* 起初在Debian中使用源于Debian版本号创建的包，在Ubuntu中使用被会附加Ubuntu&lt;修订号&gt;。如Debian 1.0-2会变成1.0-2ubuntu1，以后就是1.0-2ubuntu2，等等。 <br />
* Make source-only uploads, i.e. use "dpkg-buildpackage -S" <br />
* 创造上载源文件，如使用“dpkg-buildpackage -S” <br />
* Once you have created your packages, see [Uploads] for how to upload <br />
* 如果你已经创建了你的包文件，如何上传请参见［Uploads］ <br />
* You may want to build them in a <span>［DebootstrapChroot］</span> <br />
* 你也许想在<span>［DebootstrapChroot］</span>环境下创建它们 <br />
* You may also build packages using <span>［BuildDaemons］ </span><br />
* 你也许也想使用<span> ［BuildDaemons］ </span>来创建包文件 <br />
* New to packaging? Read <span>Debian New Maintainer Guide</span> <br />
* 现在就打包？请参见<span>Debian新维护者指南</span> <br />
* Also see <span>CDBS Tutorial </span>. <br />
* 也可以参见 <span>CDBS 教程 </span><br />
Package archive <br />
包文件集 <br />
* Information about the archive and its mirrors can be found on the [Archive] page <br />
* 文件集的相关信息和它的镜像可以在[Archive]页找到 <br />
* <span>The morgue</span> contains old versions of packages which have been removed or superseded <br />
* <span>The morgue</span> 包含了已经被删除或取代的老版本包 <br />
* You can <span>search for a package in various Ubuntu releases</span> <br />
* 你可以<span>搜索不同Ubuntu发行版本中的包</span> <br />
Seed management <br />
种子管理 <br />
* The official seed lists are available here: <span>http://people.ubuntu.com/~cjwatson/seeds/</span> <br />
* 官方种子列表在： <span>http://people.ubuntu.com/~cjwatson/seeds/</span> <br />
* Germinate output for hoary is available here: <span>http://people.ubuntulinux.org/~cjwatson/germinate-hoary-output/</span> <br />
* Hoary萌芽版本的输出在： <span>http://people.ubuntulinux.org/~cjwatson/germinate-hoary-output/</span> <br />
* <span>SeedManagement</span> explains how these pieces fit together to determine which packages go where <br />
* 种子管理说明这些部件如何装配，以决定包文件到什么地方。 <br />
Build logs <br />
创建日志 <br />
An explanation of the build daemon processing: <span>BuildDaemons</span> <br />
创建守护进程：BuildDaemons的说明 <br />
See whether your package built properly <br />
参见你的包是否适当创建 <br />
* <span>Logs by package name </span><br />
* <span>包名称日志 </span><br />
* <span>Status for each distribution </span><br />
* <span>发布状态日志 </span><br />
* <span>Logs index by date </span><br />
* <span>日期索引日志 </span><br />
Changes <br />
变化 <br />
For each new version of a package which enters the archive, a message is sent to the <span>hoary-changes mailing list</span> <br />
每个新版本的包进入文件集，消息都会发布在<span>hoary-changes 邮件列表</span> <br />
Changelogs for all packages can be found at <span>http://people.ubuntu.com/~mvo/changelogs</span> (this is the source used by update-manager and synaptic). <br />
所有包的改变日志都在<span>http://people.ubuntu.com/~mvo/changelogs</span></span><a href="http://people.ubuntu.com/%7Emvo/changelogs/%5B/url%5D%E4%B8%AD%EF%BC%88%E8%BF%99%E6%98%AF%E4%BD%BF%E7%94%A8update-manager%E5%92%8Csynaptic%E7%9A%84%E6%A0%B9%E6%BA%90%EF%BC%89" target="_blank"></a>中（这是使用update-manager和synaptic的根源） <span class="postbody"><br />
Ongoing merge <br />
发展中的合并 <br />
Automated merging of packages from Debian unstable <br />
从Debian unstable中自动合并包 <br />
* <span>Introduction</span> <br />
* <span>介绍</span> <br />
* <span>Package listings</span> <br />
* <span>包列表</span> <br />
A by-product of the automated merging is a set of patches that denote the current difference between Debian and Ubuntu. These are naively categorised and made publically available <br />
自动合并的副产品就是一连串的表示当前在Debian和Ubuntu间不同的补丁，这些被自然归类并公开发布。 <br />
* <span>Introduction</span> <br />
* <span>介绍</span> <br />
* <span>Package listings</span> <br />
* <span>包列表</span> <br />
Ubuntu traffic <br />
Ubuntu 通讯 <br />
Find out what is happening in the Ubuntu developers' world <br />
发现在Ubuntu开发者世界中发生了什么 <br />
* <span>Latest issue</span> <br />
* <span>最新发布</span> <br />
* <span>Archives of previous issues</span> <br />
* <span>以前发布</span> <br />
Bugzilla <br />
错误 <br />
* <span>Main page</span> <br />
* <span>主页</span> <br />
* More information on <span>BugTracking</span> <br />
* 更多信息在<span>错误跟踪</span> <br />
Security Updates <br />
安全更新 <br />
* <span>SecurityUpdateProcedures</span> details the special procedures for making security uploads <br />
* <span>安全更新过程</span>描述了制造安全上载的特定过程。 <br />
Broken packages <br />
破损包 <br />
* Britney output (a report of uninstallable packages) can be found here: [url] <span>http://people.ubuntulinux.org/~cjwatson/testing/</span> <br />
* Britney output（一个不能安装包的报告）可以在： <span>http://people.ubuntulinux.org/~cjwatson/testing/</span> 找到</span> 
</p>
<p>
	本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588221">http://firehare.blog.51cto.com/809276/588221</a> 
</p>";s:11:"post_banner";s:0:"";}i:2;O:8:"stdClass":5:{s:2:"id";s:3:"610";s:10:"post_title";s:33:"从现在开始要学习Python了";s:13:"post_modified";s:10:"1382605120";s:12:"post_content";s:688:"<p>
	Python是个好东东，即没有C和C++烦人的指针问题，功能似乎也比PHP要强不少，再重要的是它是纯粹的面向对象语言，语句清晰，容易理解，这对于学习来说有着很大的优势，学习语言的初期都是看别人代码的！ <br />
另一个学习Python的理由是Zope3，功能强大且结构合理，准备在学习Python之后就开始学习Zope3了，这样就可以进行快速开发了！
</p>
<p>
	本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588264">http://firehare.blog.51cto.com/809276/588264</a>
</p>";s:11:"post_banner";s:0:"";}i:3;O:8:"stdClass":5:{s:2:"id";s:3:"609";s:10:"post_title";s:129:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    Postgres的介绍和安装
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:2476:"
    		  <p><span class="postbody">介绍 <br>
======= <br>
目前Mysql被炒得沸沸扬扬，热火朝天，但我却对大家为什么不用PostgreSQL感到很不理解，甚至很多人都不知道PostgreSQL是什么， PostgreSQL 是一种非常复杂的对象-关系型数据库管理系统（ORDBMS），也是目前功能最强大，特性最丰富和最复杂的自由软件数据库系统。有些特性甚至连商业数据库都不具备。这个起源于伯克利（BSD）的数据库研究计划目前已经衍生成一项国际开发项目，并且有非常广泛的用户。据我了解国内四大国产数据库，其中三个都是基于PostgreSQL开发的！不过不知道为什么大家都对Mysql情有独钟，要知道无论从功能、性能还是软件自由程度而言，Mysql与 PostgreSQL相比简直不是一个数量级的，而且官方中文文档也很齐备。大家可以访问http: //www.pgsqldb.org看看吧，尤其是那篇《PostgreSQL 的昨天、今天和明天》。 <br>
安装 <br>
======== <br>
测试环境：Ubuntu Linux 5.10 （Breezy） <br>
在Ubuntu下安装软件是一种享受，安装PostgreSQL也不例外： <br>
代码: <br>
$sudo apt-get install postgresql-8.0 <br>
这样就安装好了PostgreSQL 8.0了，该安装将自动创建一个缺省的数据库集群（pgsqldb.org中的译法）“main”，且生成一个数据库超级用户postgres。 <br>
接下来就是要对数据库用户及权限进行设置了，首先要得到超级用户postgres的一个Shell，在这里可以通过下面的方式得到： <br>
代码: <br>
$sudo -u postgres sh <br>
在这个Shell中创建一个同你用户相同的数据库用户，在这里我使用firehare，因为这也是我登录Ubuntu的用户名 <br>
代码: <br>
$createuser -A -D firehare <br>
然后为该用户创建一个数据库，在这里我以mydb为例 <br>
[code]$createdb -O firehare mydb <br>
注意以上操作都是在用户postgres的Shell中完成的，然后退出该用户Shell环境，进入自己用户的Shell中。 <br>
[code]$exit[/code] <br>
现在做用firehare用户，你可以通过下面的命令连接到你的mydb数据库中了 <br>
$psql mydb <br>
退出用/q</span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588268">http://firehare.blog.51cto.com/809276/588268</a></p>
    		";s:11:"post_banner";s:0:"";}i:4;O:8:"stdClass":5:{s:2:"id";s:3:"608";s:10:"post_title";s:122:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    30分钟学会Zope3
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:13013:"
    		  <p style="clear: both">Zope3 In 30 Minutes <br>
三十分钟学会Zope3 <br>
Author: Baiju M <baiju.m.mail></baiju.m.mail><br>
Version: 0.1.4 <br>
Copyright: (C) 2005 Baiju M, Placed under GNU GPL version 2, or (at your option) any later version <br>
翻译：firehare <br>
校正：leal <br>
组织：ubuntu.org.cn <br><span style="font-weight: bold">Contents <br>
目录 <br>
* Why 30? 为什么是30分钟 <br>
* And why should I ...? 为什么我要学... <br>
* Keywords 关键词 <br>
* So let's start... 那么让我们开始 <br>
* BookMarker : Your first Zope3 app BookMarker：你的第一个Zope3应用 <br>
* Interfaces 接口 <br>
* Unit Testing 单元测试 <br>
* Real coding! 正式编码 <br>
* Configuration 配置 <br>
* Just run it <br>
* Views 视图 <br>
* Functional testing 功能测试 <br>
* Now what? 现在学什么？</span> <br>
Important Note: I assume you are using Debian 3.1 (Sarge) or similar systems. <br>
特别注意：我假设你正在使用Debian3.1（Sarge）或相似系统 <br><span style="font-weight: bold">Why 30? <br>
为什么是30分钟</span> <br>
Sorry! Zope3 cannot be introduced in 10 minutes. <br>
很抱歉！Zope3是不可能在10分钟内介绍清楚的 <br><span style="font-weight: bold">And why should I ...? <br>
为什么我要学？</span> <br>
If you are looking for a Pythonic framework for web application development, just continue reading. And I am not going to make a new definition for What is Pythonic?  . Here I will try to answer your "why?" questions. <br>
如果你想为基于Web的应用开发作一个Pythonic的框架，那么请继续。我并不打算对什么是Pythonic作任何新的解释，主要试图回答“为什么”的问题。 <br><span style="font-weight: bold">Keywords <br>
关键词</span> <br>
Python, Zope, Interface, Component, ZCML, ZMI, Adapter, View, Event, Service, Utility, Principal. <br><span style="font-weight: bold">So let's start... <br>
那么让我们开始...</span> <br>
Zope3 is the third generation of Zope, a framework for web applications. You can download Zope 3.1 from <strong><font color="#666666">http://www.zope.org/Products/Zope3</font></strong> . To install untar Zope3 source package, then as root: <br>
Zope3是第三代的Zope，一个Web应用框架。你可以从http://www.zope.org/Products/zope3下载Zope3.1，解压Zope3源包，并以根用户权限运行： <span class="postbody"><br><span style="font-weight: bold">译者的话：</span> <br>
如果是在Ubuntu下，请按下面命令运行： </span><span class="postbody"><br>
After installation you have to make an instance (don't worry! just do it). To do so: <br>
安装完成后，你必须建立一个Zope Instance（别担心！只需照作就行）。命令如下： </span><span class="postbody"><br>
To start Zope3 server, go to your instance directory, then: <br>
然后是启动你的Zope3服务，到你的Instance目录下，然后运行： </span><span class="postbody"><br>
If you get a port error, check check 8080 and 8021 is already used by other programs; for the time being, just stop it. Start your browser , the open <strong><font color="#666666">http://localhost:8080</font></strong> . What you see is the Zope Management Interface (ZMI). ZMI is your Python prompt, hmm... no! Zope prompt, got it?. You can login and look around to see what's happening. If you played enough with ZMI, stop it from terminal (Control + C). <br>
如果你得到一个端口错误，请检查8080和8021端口是否被其他程序占用；暂时停止运行该程序。打开你的浏览器，然后输入http://localhost:8080。你将看到Zope Management Interface（ZMI）。ZMI是你的Python提示符，嗯...不！应该是Zope的提示符，看到了吗？你可以登录进去并且到处点击看看。如果你在ZMI玩够了的话，在终端用Ctrl+C中断它。 <br><span style="font-weight: bold">BookMarker : Your first Zope3 app <br>
BookMarker：你的第一个Zope3应用</span> <br>
Yes! we are going to create a Zope3 application, an online book marker. Our app will display links to websites and a description for each link. <br>
是的！我们打算开始创建一个Zope3应用，一个在线书签。我们的应用将显示到网站的链接和每条链接的描述。 <br>
So, what you have to think about when you start a Zope3 project. Oh! sorry! I can't put it in one sentence, you better learn and practice Extreme Programming <strong><font color="#666666">http://en.wikipedia.org/wiki/Extreme_programming.</font></strong> Anyway, after your initial design, you will write interfaces. Let us hope Python 3.0 will make it much easier. Then you will write unit tests, now your ideas become very concrete!. At last write your real code. You will be satisfied when you implement interfaces one by one and unit tests succeeds!. I have given the source code of BookMarker here: <strong><font color="#666666">boom.tar.bz2</font></strong> <br>
那么，在开始一个Zope3项目前，你得做何准备呢？哦！很抱歉！我没法一言以蔽之，你最好先学习并实践XP（极限编程，一种轻量级的软件开发过程）http://en.wikipedia.org/wiki/Extreme_programming。总之，在你初步设计之后，就将编写接口。让我们期待Python 3.0 会让它变得容易些吧！然后开始编写单元测试，至此你的想法已非常具体！最后编写正式代码。当你一个接一个的实现接口并通过单元测试，你会拥有（前所未有的）满足感！ 我已经在这里给出了BookMarker应用的源代码：<strong><font color="#666666">boom.tar.bz2</font></strong> <br>
Our code will be placed at $HOME/myzope/lib/python/boom <br>
我们的代码将放在$HOME/myzope/lib/python/boom目录中 <br>
First create a file interfaces.py where we will keep our interfaces. Later we will implement these interfaces one by one, with strong support of unit testing. <br>
首先创建一个interfaces.py的文件，我们将在该文件内保存所有接口。后面我们将在单元测试的强力支持下，一个接一个的实现这些接口。 <span style="font-weight: bold"><br>
Interfaces <br>
接口</span> <br>
Here is our interfaces.py: <br>
下面就是我们的interfaces.py: </span><span class="postbody"><br>
Our first interface IMark has two attributes, one is the URL of the site and the other one is the description. Please note, IMark is not a class even though we used Python's class definition. We inherited from Interface to make it an interface. Second one is a container interface, which is an extended IContainer interface. By using this container interface we can persist our data (instances of IMark implementations). We will put all objects of IMark in a container object of IBookMarker. We will implement IMark along with IMarkContained as a constraint interface. So that IMark object will be only contained in an IBookMarker object. <br>
我们的第一个接口IMark有两个属性，一个是站点的URL，另 一个是它的描述。请注意，IMark不是一个类，尽管我们使用了Python的类定义。IMark继承自Interface，因此是个接口。第二个是一个容器接口，它是一个扩展的Icontainer接口。我们可以使用这个容器接口来保存我们的数据（IMark实现的实例）。我们将IMark的所有对象放到IBookMarker的一个容器对象里。我们连同IMarkContained（作为一个约束接口）一起来实现IMark。所以IMark对象只能包含在IBookMarker对象中。 <br><span style="font-weight: bold">Unit Testing <br>
单元测试</span> <br>
Now create tests.py and put the following code there: <br>
现在创建tests.py文件，输入下列语句： </span><span class="postbody"><br>
Actually, we are not written any unit tests here, but this will make our doc tests working automatically.<br>
实际上我们在这里并没有编写任何的单元测试，不过它会自动对我们的文档进行测试 <br>
To run the unit test: <br>
然后运行单元测试 </span><span class="postbody"><br><span style="font-weight: bold">Real coding! <br>
正式编码</span> <br>
Now let's move on to the implementation (bookmarker.py): <br>
现在让我们继续去实现（bookmarker.py） </span><span class="postbody"><br>
We have written doctests along with the implementations. Doctests are accompanied with examples, so it is called example driven unit testing. <br>
我们已经在实现的同时也编写了Doctests，该Doctests是同例子一起的，所以这种实现方式我们称之为事例驱动单元测试 <span style="font-weight: bold"><br>
Configuration <br>
配置</span> <br>
Now configuration (save in configure.zcml): <br>
现在编写配置（保存在configure.zcml文件中）： </span><span class="postbody"><br>
Is it self explanatory? "no...!" then ok! we will discuss Zope Configuration Markup Language (ZCML) briefly later. Actually, if you are familiar with ZCML this configuartion will be more than self explanatory. It will give you an overall idea about the entire application. Now you might think, it is not Pythonic  Hey! think twice!. <br>
它能不言自明（即能够自我解释，XML之类的标记语言都有这个特点）吗？“不...!”好吧，我们将稍后简单的谈谈Zope Configuration Markup Language（ZCML，Zope配置标记语言）。实际上，如果你对ZCML熟悉的话，你会发现这个配置不止是不言自明，它将带给你的是对整个应用的总体思路。现在你可能在想，这并不Pythonic嘛 ，嗨！再想想！ <br><span style="font-weight: bold">Just run it</span> <br>
As the last step to work our application, put the following line in:$HOME/myzope/etc/package-icludes/boom-configure.zcml: <br>
最后一步就是要让我们的应用运行起来，在文件$HOME/myzope/etc/package-icludes/boom-configure.zcml中插入下列行： </span><span class="postbody"><br>
Now you registered your package. <br>
现在你已经注册了你的包。 <br>
Run zope again, then open your browser, add a BookMarker and few book marks. <br>
重新启动Zope，然后打开你的浏览器，添加一个BookMarker和一些书签。 <br>
Now you want to arrange your your book marks in a better way, don't you?. For the time being, just relax, then we will create a view for book marks. <br>
现在，你不想让你的书签排列得更好点吗？先暂时休息一下，之后我们将为书签创建一个视图。 <br><span style="font-weight: bold">Views <br>
视图</span> <br>
Now create a file named browser.py with following code: <br>
现在新建一个名为browser.py的文件，并输入下列代码： </span><span class="postbody"><br>
Then one template (marks.pt): <br>
然后创建一个模板（marks.pt） </span><span class="postbody"><br>
Now by clicking on "Marks" tab you can see all book marks. <br>
现在点击一下“Marks”标签，你就可以看到所有的书签了。 <br>
Ok! this is not the end, just the beginning of your study. <br>
好的！这样可不能算是结束，这仅仅是你学习的开始。 <br><span style="font-weight: bold">Functional testing <br>
功能测试</span> <br>
Let's finish our example writing a functional test for view (ftests.py): <br>
让我们为视图写一个功能测试来结束我们的例子（ftests.py） </span><span class="postbody"><br>
To run the functional test: <br>
然后运行该功能测试： </span><span class="postbody"><span style="font-weight: bold"><br>
Now what? <br>
现在学什么？</span> <br>
Now you can start learning Zope3 in detail, using Zope3 book. Also join zope3-users mailing list. <br>
现在你可以通过Zope3 Book开始详细学习Zope3了。也可以加入到zope3-user邮件列表里。 <br>
There is a good Zope3 quick start guide by Benji York: <strong><font color="#666666">http://www.benjiyork.com/quick_start/</font></strong> <br>
这里有Benji York写的一个不错的Zope3快速入门指南： <strong><font color="#666666">http://www.benjiyork.com/quick_start/</font></strong> <br>
A good introductory book is also available in print, visit: <strong><font color="#666666">http://worldcookery.com/</font></strong> <br>
还有一本已出版的介绍性图书，很不错，请访问： <strong><font color="#666666">http://worldcookery.com/</font></strong> <br>
Just one more thing: I want to improve this document, so don't hesitate to write your feedback to: baiju.m.mail AT gmail.com <br>
还有一点：我想不断完善这份文档，因此有何意见/建议千万别犹豫，请发送到： <strong><font color="#666666">baiju.m.mail@gmail.com</font></strong></span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588278">http://firehare.blog.51cto.com/809276/588278</a></p>
    		";s:11:"post_banner";s:0:"";}i:5;O:8:"stdClass":5:{s:2:"id";s:3:"607";s:10:"post_title";s:142:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    JAVA中文支持指南（Vera Yuanti）
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:31791:"
    		  <p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">在本指南中假设你已经安装了</span><span lang="EN-US">ttf-vera-yuan</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">字体包，如果你还没有安装的话，请使用下面的命令：</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo apt-get install ttf-vera-yuan <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">1</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、首先安装</span><span lang="EN-US">Sun</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">的</span><span lang="EN-US">J2SDK1.5</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">包</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo apt-get install sun-j2sdk1.5 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">2</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、然后进入</span><span lang="EN-US">J2SDK</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">的库目录</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">cd /usr/lib/j2sdk1.5-sun/jre/lib <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">3</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、将</span><span lang="EN-US">RedHat</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">的模板将老的</span><span lang="EN-US">fontconfig.properties</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">替换掉，以方便修改，然后对其进行编辑</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo cp fontconfig.RedHat.3.properties.src fontconfig.properties <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sudo vi fontconfig.properties <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">请修改成以下样式，直接拷贝下来也成</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># @(#)linux.fontconfig.RedHat.3.properties<span style="mso-spacerun: yes">   </span>1.1 <chsdate w:st="on" isrocdate="False" islunardate="False" day="10" month="12" year="2003">03/12/10</chsdate><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Copyright 2003 Sun Microsystems, Inc. All rights reserved. <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Version <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">version=1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Component Font Mappings <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-gb18030=-misc-zysong18030-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-gb18030.motif=-isas-song ti-medium-r-normal--*-%d-*-*-c-*-gb2312.1980-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-big5=-arphic technology co.-ar pl mingti2l big5-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.chinese-big5.motif=-<city w:st="on"><place w:st="on">taipei</place></city>-fixed-medium-r-normal--*-%d-*-*-c-*-big5-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">#allfonts.lucida=-b&amp;h-lucidasans-medium-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># </span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span><span lang="EN-US">===== <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-gb18030=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-gb18030.motif=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-gb2312.1980-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-big5=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">allfonts.chinese-big5.motif=-misc-vera sans yuanti-medium-r-normal--*-%d-*-*-*-*-gb18030.2000-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># =====</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.latin-1=-b&amp;h-lucidabright-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.plain.latin-1.motif=-b&amp;h-luxi serif-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.latin-1=-b&amp;h-lucidabright-demibold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bold.latin-1.motif=-b&amp;h-luxi serif-bold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.latin-1=-b&amp;h-lucidabright-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.italic.latin-1.motif=-b&amp;h-luxi serif-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.latin-1=-b&amp;h-lucidabright-demibold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">serif.bolditalic.latin-1.motif=-b&amp;h-luxi serif-bold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.latin-1=-b&amp;h-lucidasans-medium-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.plain.latin-1.motif=-b&amp;h-luxi sans-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.latin-1=-b&amp;h-lucidasans-bold-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bold.latin-1.motif=-b&amp;h-luxi sans-bold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.latin-1=-b&amp;h-lucidasans-medium-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.italic.latin-1.motif=-b&amp;h-luxi sans-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.latin-1=-b&amp;h-lucidasans-bold-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sansserif.bolditalic.latin-1.motif=-b&amp;h-luxi sans-bold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.latin-1=-b&amp;h-lucidatypewriter-medium-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.plain.latin-1.motif=-b&amp;h-luxi mono-medium-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.latin-1=-b&amp;h-lucidatypewriter-bold-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bold.latin-1.motif=-b&amp;h-luxi mono-bold-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.latin-1=-b&amp;h-lucidatypewriter-medium-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.italic.latin-1.motif=-b&amp;h-luxi mono-medium-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.latin-1=-b&amp;h-lucidatypewriter-bold-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">monospaced.bolditalic.latin-1.motif=-b&amp;h-luxi mono-bold-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.latin-1=-b&amp;h-lucidasans-medium-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.plain.latin-1.motif=-b&amp;h-luxi sans-medium-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.latin-1=-b&amp;h-lucidasans-bold-r-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bold.latin-1.motif=-b&amp;h-luxi sans-bold-r-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.latin-1=-b&amp;h-lucidasans-medium-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.italic.latin-1.motif=-b&amp;h-luxi sans-medium-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.korean=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.korean.motif=-misc-baekmuk gulim-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.latin-1=-b&amp;h-lucidasans-bold-i-normal-sans-*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialog.bolditalic.latin-1.motif=-b&amp;h-luxi sans-bold-i-normal--*-%d-*-*-p-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.latin-1=-b&amp;h-lucidatypewriter-medium-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.plain.latin-1.motif=-b&amp;h-luxi mono-medium-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.latin-1=-b&amp;h-lucidatypewriter-bold-r-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bold.latin-1.motif=-b&amp;h-luxi mono-bold-r-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.latin-1=-b&amp;h-lucidatypewriter-medium-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.italic.latin-1.motif=-b&amp;h-luxi mono-medium-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.japanese-x0208=-misc-<place w:st="on"><city w:st="on">kochi</city></place> mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.korean=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.korean.motif=-misc-baekmuk batang-medium-r-normal--*-%d-*-*-c-*-ksc5601.1987-0 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.latin-1=-b&amp;h-lucidatypewriter-bold-i-normal-sans-*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">dialoginput.bolditalic.latin-1.motif=-b&amp;h-luxi mono-bold-i-normal--*-%d-*-*-m-*-iso8859-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Search Sequences <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts=latin-1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.Big5=latin-1,chinese-big5 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.x-euc-jp-linux=latin-1,japanese-x0208 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.EUC-KR=latin-1,korean <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.allfonts.GB18030=latin-1,chinese-gb18030 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">sequence.fallback=lucida,chinese-big5,chinese-gb18030,japanese-x0208,korean <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># <place w:st="on"><placename w:st="on">Exclusion</placename><placetype w:st="on">Ranges</placetype></place><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">exclusion.japanese-x0208=0390-03d6,2200-22ef,2701-27be <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># Font File Names <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-arphic_technology_co.-ar_pl_mingti2l_big5-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/zh_TW/TrueType/bsmi00lp.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-baekmuk_batang-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/ko/TrueType/batang.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-baekmuk_gulim-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/ko/TrueType/gulim.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-kochi_gothic-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0=/usr/share/fonts/ja/TrueType/kochi-gothic-subst.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-kochi_mincho-medium-r-normal--*-%d-*-*-c-*-jisx0208.1983-0=/usr/share/fonts/ja/TrueType/kochi-mincho-subst.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-zysong18030-medium-r-normal--*-%d-*-*-c-*-iso10646-1=/usr/share/fonts/zh_CN/TrueType/zysong.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># AWT X11 font paths <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.latin-1=/usr/X11R6/lib/X11/fonts/Type1 <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.chinese-big5=/usr/share/fonts/zh_TW/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.chinese-gb18030=/usr/share/fonts/zh_CN/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.japanese-x0208=/usr/share/fonts/ja/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">awtfontpath.korean=/usr/share/fonts/ko/TrueType <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># </span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span><span lang="EN-US">===== <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-vera_sans_yuanti-medium-r-normal--*-%d-*-*-*-*-iso10646-1=/usr/share/fonts/truetype/ttf-vera-yuan/VeraSansYuanTi-Regular.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-vera_sans_yuanti-medium-r-normal--*-%d-*-*-*-*-gb2312.1980-0=/usr/share/fonts/truetype/ttf-vera-yuan/VeraSansYuanTi-Regular.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">filename.-misc-vera_sans_yuanti-medium-r-normal--*-%d-*-*-*-*-gb18030.2000-0=/usr/share/fonts/truetype/ttf-vera-yuan/VeraSansYuanTi-Regular.ttf <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"># =====</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">中文字体支持部分</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">4</span><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">、下面进行测试，试运行下面的命令：</span> <span lang="EN-US"><p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">代码</span><span lang="EN-US">: <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US">/usr/lib/j2sdk1.5-sun/bin/java -jar /usr/lib/j2sdk1.5-sun/demo/jfc/FileChooserDemo/FileChooserDemo.jar <p></p></span></p>
<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'">如果点击浏览可以看到中文而不是方框的话，那么恭喜你，你成功了！</span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/588298">http://firehare.blog.51cto.com/809276/588298</a></p>
    		";s:11:"post_banner";s:0:"";}i:6;O:8:"stdClass":5:{s:2:"id";s:3:"606";s:10:"post_title";s:160:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    X300等低端ATI显卡在Dapper的Gnome上使用XGL指南
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:5301:"
    		  <p><span class="postbody">官方文档中的 Problematic Hardware 小节中有以下这么一节文字： <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">
<br>
            * ATI Radeon Mobility M6 LY using DRI drivers <br>
            drawing artifacts and occasional flickering <br>
            * Intel i815, i845, i855 <br>
            Too old, Xgl works, but compiz will not work. Maybe a compatibility layer is added later. <br>
            * ATI Technologies Inc RV280 (5961) [Radeon 9200] (no hardware acceleration using fglrx 8.22.5 drivers) <br>
            * ATI Radeon X300, X600, and X700 do not seem to work at all with fglrx 8.23.7. Expect machine crashes <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
其中就提到了 ATI X300等显卡在运行XGL时会造成死机，我的IBM T43也是如此，不过在网上疯狂找了一通帖子之后，终于解决了这个问题，写下来以供大家参考，也算是提供了一条思路： <br>
1、首先是要使ATI X300等显卡支持 3D 了，在通常安装中，ATI显卡是不会自动支持3D的，我的方法是： <br><br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">
<br>
            sudo apt-get install xorg-driver-fglrx <br>
            echo fglrx | sudo tee -a /etc/modules <br>
            （这一步就是在 /etc/modules 文件中添加添加一行 fglrx，如果有的话，就可以忽略） <br><br>
            sudo vi /etc/X11/xorg.conf <br>
            找到"ati"并将其改成"fglrx"， <br><br>
            sudo reboot <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
2、重启之后，进入Gnome，在终端输入以下命令： <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">
<br>
            fglrxinfo <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br>
如果出现ATI字样，说明一切正常，否则请<span style="line-height: normal; font-size: 18px"><span style="color: red">切记不要继续下去</span></span>。如果你想进一步测试显卡性能的话，可以使用fgl_glxgears 命令 <br><br>
3、安装XGL <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">sudo apt-get install xserver-xgl compiz-gnome libglitz1 libglitz-glx1 libgl1-mesa libgl1-mesa-dri</td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
后面两个包如果你的缺省安装的GNOME的话，是已经装好的，不过为防有人自定义安装 GNOME，就加上去了。 <br><br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">sudo vi /etc/gdm/gdm.conf-custom <br>
            [servers] <br>
            # Override display 1 to use Xgl (DISPLAY 1 IMPORTANT FOR ATI FGLRX). <br>
            1=Xgl <br><br>
            [server-Xgl] <br>
            name=Xgl server <br>
            command=/usr/bin/Xgl :1 -fullscreen -ac -accel glx:pbuffer -accel xv:pbuffer <br>
            flexible=true <br><br>
            sudo vi /etc/gdm/gdm.conf <br>
            #0=Standard <br>
            1=Standard <br>
             </td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
然后 <br></span></p>
<p>
</p>
<table border="0" cellspacing="1" cellpadding="3" width="90%" align="center"><tbody>
<tr>
<td><span class="genmed"><strong>代码:</strong></span></td>
        </tr>
<tr>
<td class="code">vi .gnomerc <br>
            gnome-window-decorator &amp; <br>
            compiz --replace gconf decoration wobbly fade minimize cube rotate zoom scale move resize place menu switcher &amp;</td>
        </tr>
</tbody></table>
<p><span class="postbody"><br><br>
这样就做好了XGL部分了，但是如果这时你重启的话，你会发现你的机器在进入GNOME后几秒就会死机，甚至在GDM界面就会死机，为了避免这个，你需要在/etc/X11/xorg.conf 文件中添加红色部分一句： <br><br>
Section "Device" <br>
Identifier "ATI Technologies, Inc. Radeon Mobility M300 (M22)" <br>
Driver "fglrx" <br>
BusID "PCI:1:0:0" <br><span style="color: red">Option "KernelModuleParm" "agplock=0"</span> <br>
EndSection <br><br>
这样之后，你就重启吧，然后，欢迎你进入3D桌面时代！</span></p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/587140">http://firehare.blog.51cto.com/809276/587140</a></p>
    		";s:11:"post_banner";s:0:"";}i:7;O:8:"stdClass":5:{s:2:"id";s:3:"605";s:10:"post_title";s:128:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    Seam开发环境的搭建
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:5976:"
    		  <p>一、Seam开发环境的搭建</p>
<p>Seam开发环境的搭建包含以下几项内容：</p>
<p> </p>
<ol>
<li>Java环境的安装和配置</li>
    <li>JBoss环境的安装和配置</li>
    <li>Ant环境的安装和配置</li>
    <li>Seam环境的安装和配置</li>
    <li>Eclipse环境及JBoss Tools 插件的安装和配置</li>
</ol>
<p> </p>
<p>二、Java环境的安装和配置</p>
<p>1、下载JDK</p>
<p>http://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/VerifyItem-Start/jdk-6u22-windows-i586.exe?BundledLineItemUUID=zOuJ_hCwbWAAAAErZYYAHvtE&amp;OrderID=7H.J_hCwTnwAAAErWIYAHvtE&amp;ProductID=c66J_hCwkI4AAAErIFJuIQy3&amp;FileName=/jdk-6u22-windows-i586.exe</p>
<p>2、运行下载下来的 jdk-6u22-windows-i586.exe文件，安装Java SDK</p>
<p>3、设置全局系统变量（我的电脑--&gt;属性--&gt;高级--&gt;环境变量），添加JAVA_HOME变量（值为JDK的安装路径）和CLASS_PATH（值为.;%JAVA_HOME%\lib），并在Path中添加“;%JAVA_HOME%\bin; %JAVA_HOME%\jre\bin”，然后重启系统。</p>
<p>配置系统变量的说明：</p>
<p>1)JAVA_HOME变量：它指向jdk的安装目录，Eclipse/NetBeans/Tomcat等软件就是通过搜索JAVA_HOME变量来找到并使用安装好的jdk。</p>
<p>2)CLASSPATH变量：作用是指定类搜索路径，要使用已经编写好的类，前提当然是能够找到它们了，JVM就是通过CLASSPTH来寻找类的。在这里，为了方便起见，要把当前目录“.”也加入到该变量中。</p>
<p>3)PATH变量：作用是指定命令搜索路径，在i命令行下面执行命令如javac编译java程序时，它会到PATH变量所指定的路径中查找看是否能找到相应的命令程序。我们需要把jdk安装目录下的bin目录增加到现有的PATH变量中，bin目录中包含经常要用到的可执行文件如javac/java/javadoc等待，设置好PATH变量后，就可以在任何目录下执行javac/java等工具了。</p>
<p>4、测试系统变量是否生效，可在命令行中敲入 java 和 javac，如果没有出错信息则表示Java配置正常。</p>
<p>三、JBOSS环境的安装和配置</p>
<p>1、下载 JBOSS</p>
<p>http://sourceforge.net/projects/jboss/files/JBoss/JBoss-5.1.0.GA/jboss-5.1.0.GA-jdk6.zip/download</p>
<p>2、解压下载下来的jboss-5.1.0.GA-jdk6.zip文件到指定的目录，这样就完成JBoss的安装了。（注意：解压目录最好不要有空格，否则运行容易出现异常）</p>
<p>3、设置全局系统变量（我的电脑--&gt;属性--&gt;高级--&gt;环境变量），添加JBOSS_HOME变量（值为解压JBOSS的目录），重启系统后，JBoss环境就安装和配置好了</p>
<p>四、Ant环境的安装和配置</p>
<p>1、下载 Apache Ant</p>
<p>http://labs.renren.com/apache-mirror//ant/binaries/apache-ant-1.8.1-bin.zip</p>
<p>2、解压下载下来的apache-ant-1.8.1-bin.zip文件到指定的目录，这样就完成Ant的安装了。（注意：解压目录最好不要有空格，否则运行容易出现异常）</p>
<p>3、设置全局系统变量（我的电脑--&gt;属性--&gt;高级--&gt;环境变量），添加ANT_HOME变量（值为解压ANT的目录），并在Path中添加“;%ANT_HOME%\ bin”，重启系统后，Ant环境就安装和配置好了</p>
<p>五、Seam环境的安装和配置</p>
<p>1、下载 JBoss Seam</p>
<p>http://sourceforge.net/projects/jboss/files/JBoss%20Seam/2.2.0.GA/jboss-seam-2.2.0.GA.zip/download</p>
<p>2、解压下载下来的jboss-seam-2.2.0.GA.zip到指定的目录，这样就完成了Seam的安装了。（注意：解压目录最好不要有空格，否则运行容易出现异常）</p>
<p>3、接着在Seam的根目录下的 build.properties 文件中正确设定JBoss的安装路径，建议使用UltraEdit工具修改（不要转换成DOS格式），如下所示添加以下行即可：</p>
<p>jboss.home D:\\jboss-5.1.0.GA</p>
<p>这样Seam环境就安装和配置好了</p>
<p>六、Eclipse环境及JBoss Tools 插件的安装和配置</p>
<p>1、下载Eclipse IDE for Java EE Developers</p>
<p>http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/helios/SR1/eclipse-jee-helios-SR1-win32.zip</p>
<p>2、解压运行下载下来的eclipse-jee-helios-SR1-win32.zip文件到指定目录</p>
<p>3、双击指定目录中的Eclipse.exe文件，运行Eclipse IDE</p>
<p>4、Help-&gt;Install New Software…，点击Add…，添入 JBoss Tools Updates和安装网址http://download.jboss.org/jbosstools/updates/development/，确定后，选择All JBoss Tools 3.2.0，等待安装完成重启Eclipse IDE后，即可实现JBoss Tools的安装和配置</p>
<p>5、配置Eclipse IDE，使其能管理JBoss服务的开启和停止。点击右下框架中的Server标签，右键New-&gt;Server，选择JBoss AS 5.1.0，在Server runtime Environment 文本框的右边点击Add，Home Directory选择JBoss的安装目录，JRE选择JRE6，然后点击Finish，结束服务器运行时环境的配置，然后再点击Finish，完成服务器的添加。</p>
<p>6、由于Sun的JVM运行JBoss服务器的时候，常常会报“内存不足”的错误，所以为了避免JVM过早出现问题继而导致JBoss服务器出现问题，应该在IDE中JBoss应用服务器运行时配置的VM选项（双击新添加的JBoss服务器，点击Open launch configuration）或者直接在JBoss服务器根目录下的bin/run.conf中提供以下参数：</p>
<p>-Xms128m -Xmx512m -XX:MaxPermSize=512m -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -XX:+UseConcMarkSweepGC -XX:+CMSPermGenSweepingEnabled -XX:+CMSClassUnloadingEnabled -Xverify:none </p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/586513">http://firehare.blog.51cto.com/809276/586513</a></p>
    		";s:11:"post_banner";s:0:"";}i:8;O:8:"stdClass":5:{s:2:"id";s:3:"604";s:10:"post_title";s:141:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    使用Seam-gen生成基础项目骨架
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:9405:"
    		  <p>Seam-gen 有两种版本：命令行脚本和IDE插件（在开发环境搭建一文中安装的Eclipse插件Jboss Tools套件中就包含着该IDE插件），但由于Seam-gen命令行版本是Ant的一个包装，通过它生成的项目不论是通过命令行还是能过IDE都可以启动，因此确定使用Seam-gen命令行版本来生成基础项目骨架。</p>
<p>进行Seam解压目录，存在两个脚本：seam和seam.bat，它们分别用于Linux/Unix平台和Windows平台。在命令行控制台中，输入seam help可以看seam-gen的简单概要。一般来说使用Seam-gen生成基础项目骨架只需要四步，它们分别是：</p>
<p>seam setup<span style="white-space: pre"> </span>输入项目原型和数据库信息</p>
<p>seam create-project<span style="white-space: pre"> </span>创建基础项目结构</p>
<p>seam generate<span style="white-space: pre"> </span>反向工程数据库，创建管理数据库的CRUD程序</p>
<p>seam explode<span style="white-space: pre"> </span>将应用程序部署到JBoss应用服务器</p>
<p>一、收集项目信息（输入项目原型和数据库信息）</p>
<p>Seam setup会发出一系列的问题，让seam-gen去收集它需要的信息，才能创建项目。每一个问题都由3部分组成：问题、当前值和一个有效回复列表（如果有的话）。对于每个问题，都需要输入一个回复并按回车键，然后继续下一个问题，为进入下一步收集需要的信息。</p>
<p>$ ./seam setup</p>
<p>SEAM_HOME: /opt/jboss/jboss-seam-2.2.0.GA</p>
<p>Using seam-gen sources from: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen</p>
<p>Buildfile: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen/build.xml</p>
<p>init:</p>
<p>setup:</p>
<p>     [echo] Welcome to seam-gen 2.2.0.GA :-)</p>
<p>     [echo] Answer each question or hit ENTER to accept the default (in brackets)</p>
<p>     [echo] </p>
<p>//输入项目目录</p>
<p>    [input] Enter the directory where you want the project to be created (should not contain spaces) [/home/firehare/项目/lpms] [/home/firehare/项目/lpms]</p>
<p>//输入JBOSS应用服务器相关信息</p>
<p>    [input] Enter your JBoss AS home directory [/opt/jboss/jboss-5.1.0.GA] [/opt/jboss/jboss-5.1.0.GA]</p>
<p>    [input] Enter your JBoss AS domain [default] [default]</p>
<p>//输入GlassFish服务器相关信息（由于我们不使用该服务，所以无需填写）</p>
<p>    [input] Enter your GlassFish V2 or V3 home directory (Ignore if you aren't deploying to GlassFish) [/opt/glassfish/glassfish-3.0.1] [/opt/glassfish/glassfish-3.0.1]</p>
<p>    [input] Enter your GlassFish domain (Ignore if you aren't deploying to GlassFish) [domain1] [domain1]</p>
<p>//输入项目名单</p>
<p>    [input] Enter the project name [lpms] [lpms]</p>
<p>     [echo] Accepted project name as: lpms</p>
<p>//采用RichFaces界面（ICEfaces界面性能好一些，但为了能够使用JBossTools插件中的RichFaces，暂用RichFaces界面）</p>
<p>    [input] Do you want to use ICEfaces instead of RichFaces? [n] (y, [n])</p>
<p>    [input] skipping input as property icefaces.home.new has already been set.</p>
<p>//选择RichFaces界面的皮肤</p>
<p>    [input] Select a RichFaces skin [blueSky] ([blueSky], classic, darkX, deepMarine, DEFAULT, emeraldTown, glassX, japanCherry, laguna, ruby, wine)</p>
<p>//确定该项目是做为WAR部署</p>
<p>    [input] Is this project deployed as an EAR (with EJB components) or a WAR (with no EJB support)? [war] (ear, [war])</p>
<p>//输入Java类的基包名</p>
<p>    [input] Enter the base package name for your Java classes [com.mydomain.lpms] [com.mydomain.lpms]</p>
<p>cn.edu.wzu.cmet.lpms</p>
<p>//输入会话Beans的Java包名</p>
<p>    [input] Enter the Java package name for your session beans [cn.edu.wzu.cmet.lpms.action] [cn.edu.wzu.cmet.lpms.action]</p>
<p>//输入实体Beans的Java包名</p>
<p>    [input] Enter the Java package name for your entity beans [cn.edu.wzu.cmet.lpms.model] [cn.edu.wzu.cmet.lpms.model]</p>
<p>//输入测试的Java包名</p>
<p>    [input] Enter the Java package name for your test cases [cn.edu.wzu.cmet.lpms.test] [cn.edu.wzu.cmet.lpms.test]</p>
<p>//输入数据库类型</p>
<p>    [input] What kind of database are you using? [mysql] (hsql, [mysql], derby, oracle, postgres, mssql, db2, sybase, enterprisedb, h2)</p>
<p>//输入JDBC驱动的目录（由于使用的是linux，所以目录同windows下的不一样，Windows下直接输入mysql JDBC驱动所在的目录）</p>
<p>    [input] Enter the filesystem path to the JDBC driver jar [/usr/share/java/mysql.jar] [/usr/share/java/mysql.jar]</p>
<p>    [input] skipping input as property driver.license.jar.new has already been set.</p>
<p>    [input] Enter the Hibernate dialect for your database [org.hibernate.dialect.MySQLDialect] [org.hibernate.dialect.MySQLDialect]</p>
<p>//输入JDBC驱动类名</p>
<p>    [input] Enter the JDBC driver class for your database [com.mysql.jdbc.Driver] [com.mysql.jdbc.Driver]</p>
<p>//输入JDBC数据源类</p>
<p>    [input] Enter the JDBC DataSource class for your database [com.mysql.jdbc.jdbc2.optional.MysqlDataSource] [com.mysql.jdbc.jdbc2.optional.MysqlDataSource]</p>
<p>//输入数据库JDBC URL</p>
<p>    [input] Enter the JDBC URL for your database [jdbc:mysql://localhost:3306/lpms] [jdbc:mysql://localhost:3306/lpms]</p>
<p>jdbc:mysql://localhost:3306/lpms?useUnicode=true&amp;amp;characterEncoding=utf-8</p>
<p>//输入数据库用户名</p>
<p>    [input] Enter the database username [lpms] [lpms]</p>
<p>//输入数据库密码</p>
<p>    [input] Enter the database password [lpms] [lpms]</p>
<p>    [input] skipping input as property hibernate.default_schema.entered has already been set.</p>
<p>    [input] Enter the database catalog name (Enter '-' to clear previous value) [] []</p>
<p>//是否使用已有数据库</p>
<p>    [input] Are you working with tables that already exist in the database? [y] ([y], n)</p>
<p>    [input] Do you want to recreate the database tables and execute import.sql each time you deploy? [n] (y, [n])</p>
<p>   [delete] Deleting: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen/build.properties</p>
<p>[propertyfile] Creating new property file: /opt/jboss/jboss-seam-2.2.0.GA/seam-gen/build.properties</p>
<p>     [echo] Installing JDBC driver jar to JBoss AS</p>
<p>init:</p>
<p>init-properties:</p>
<p>     [echo] /opt/jboss/jboss-5.1.0.GA</p>
<p>validate-workspace:</p>
<p>validate-project:</p>
<p>settings:</p>
<p>     [echo] JBoss AS home: /opt/jboss/jboss-5.1.0.GA</p>
<p>     [echo] GlassFish home: /opt/glassfish/glassfish-3.0.1</p>
<p>     [echo] Project name: lpms</p>
<p>     [echo] Project location: /home/firehare/项目/lpms/lpms</p>
<p>     [echo] Project type: war</p>
<p>     [echo] IceFaces: n</p>
<p>     [echo] Action package: cn.edu.wzu.cmet.lpms.action</p>
<p>     [echo] Model package: cn.edu.wzu.cmet.lpms.model</p>
<p>     [echo] Test package: cn.edu.wzu.cmet.lpms.test</p>
<p>     [echo] JDBC driver class: com.mysql.jdbc.Driver</p>
<p>     [echo] JDBC DataSource class: com.mysql.jdbc.jdbc2.optional.MysqlDataSource</p>
<p>     [echo] Hibernate dialect: org.hibernate.dialect.MySQLDialect</p>
<p>     [echo] JDBC URL: jdbc:mysql://localhost:3306/lpms</p>
<p>     [echo] Database username: lpms</p>
<p>     [echo] Database password: lpms</p>
<p>     [echo] </p>
<p>     [echo] Type './seam create-project' to create the new project</p>
<p>BUILD SUCCESSFUL</p>
<p>Total time: 1 minute 16 seconds</p>
<p>这样就完成了项目信息的收集工作</p>
<p>二、创建项目结构（创建基础项目结构）</p>
<p>setup命令只是为seam-gen做好创建项目的准备。真要让seam利用模板生成一个项目，还需要执行sean create-project命令。这样seam将创建一个新的项目，并将配置好该项目的一切，同时还配有一个基于Ant构建的，用于编译、测试、打包和部署的应用程序。</p>
<p>三、创建CRUD程序（项目反向工程数据库，生成管理数据库的CRUD程序）</p>
<p>有了基础的项目骨架之后，就可以进行部署了。但如果是基于已有数据库的话，可以先对数据库进行反向工程，使用seam generate命令可以从一个已有数据库的Schema生成JPA实体类，并生成用来管理这些实体的CRUD用户接口。这些实体在Facelets视图模板中渲染，并且为JavaBean动作类所支持。这样就很方便地构建出了应用程序的原型。</p>
<p> 四、项目部署（将应用程序部署到JBoss应用服务器）</p>
<p>应用程序的原型构建好之后，为了让该应用程序启动，需要将其部署到JBoss应用服务器中，在这里为了能够对应用程序进行热部署，使用seam explode命令来进行部署，这样在应用程序更改之后，可以通过重新运行seam explode来进行重新部署（增量热部署）。</p>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/586520">http://firehare.blog.51cto.com/809276/586520</a></p>
    		";s:11:"post_banner";s:0:"";}i:9;O:8:"stdClass":5:{s:2:"id";s:3:"603";s:10:"post_title";s:125:"

             <img src="http://blog.51cto.com/image/skin/artType01.jpg">


    		    Seam的中文化支持
                ";s:13:"post_modified";s:4:"2013";s:12:"post_content";s:6365:"
    		  <p>一、预备知识</p>
<p>Seam的中文化支持是通过资源包文件来实现的。资源包是Java属性元数据格式的一种应用，它以键／值对的形式保存元数据。这些键／值对按照一定的规则进行分组，并绑定到某个bundle名称下。Java将根据bundle名和指定的地域（即local）来查找属性文件。文件名由bundle组成，接着是以一条下划线（_）作为前缀的当前地域，最后是.properties的扩展名。如果找不到当前地域的文件，就会采用以"bundle名.properties"为名的文件。例如：如果bundle名是messages，且当前地域为US English，那么Seam就会按下列搜索顺序来查找资源包文件：</p>
<div>messages_en_US.properties</div>
<div>messages_en.properties</div>
<div>messages.properties</div>
<p>因此要想让Seam支持中文的话，那就必须要有中文资源包文件，根据Seam的搜索约定，必须要在下列文件之一中键值为中文：</p>
<div>messages_zh_CN.properties</div>
<div>messages_zh.properties</div>
<div>messages.properties</div>
<div>另：采用资源包文件不但有利于支持应用程序国际化，而且它还可以很方便地修改输出消息，而不需要在程序源代码中去查找和修改，有利于程序的后期维护和修改。</div>
<div>
<br>
 </div>
<div>二、实现方式</div>
<div>一般来说，Seam在用户登录会话时会生成一个java.util.Locale实例，该实例会以"locale"组件的形式提供给应用程序，Seam会自动通过JSF来判定当前会话的locale。其判定流程按如下顺序进行：</div>
<div>
<div>    如果HTTP请求中有关联locale（如：浏览器的locale），且该locale在faces-config.xml的支持列表中，那么其它会话也使用该locale；</div>
<div>    否则使用在faces-config.xml文件中指定的默认locale；</div>
<div>    否则使用服务器的默认locale。</div>
<div>因此，要想让Seam支持中文，首先需要在faces-config.xml文件（位于项目根目录下的resources/WEB-INF目录）中支持中文，如下所示：</div>
      &lt;locale-config&gt;<br>
         &lt;default-locale&gt;en&lt;/default-locale&gt;<br>
         &lt;supported-locale&gt;bg&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;de&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;en&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;fr&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;it&lt;/supported-locale&gt;<br>
         &lt;supported-locale&gt;tr&lt;/supported-locale&gt;<br>
         &lt;!-- 中文化支持 --&gt;<br>
         &lt;supported-locale&gt;zh_CN&lt;/supported-locale&gt;<br>
      &lt;/locale-config&gt;<br><br><div>当然，如果稳妥起见，可以将default-locale标签中的en设置成zh_CN（将默认locale指定为简体中文），甚至可以把服务器的默认locale也设为zh_CN。</div>
</div>
<div>
<br>
 </div>
<div>其次在中文资源包中（位于项目根目录下的resources目录）定义一个键／值对（为了方便描述，bundle名采用messages，这样中文资源包文件名就是messages_zh_CN.properties）：</div>
<div> UserName=用户名</div>
<div> Welcome=欢迎</div>
<div>
<br>
 </div>
<div>接着在JSF中声明引入messages资源包，JSF 通过使用 来支持用户界面标签和描述文本的国际化。这个方法同样可以用在Seam应用程序中。如下所示：</div>
<p>    ...</p>
<div>
<div>    xmlns:f="http://java.sun.com/jsf/core"</div>
<div>    xmlns:h="http://java.sun.com/jsf/html"</div>
<div>    ...</div>
<div>    </div>
<div>&lt;f:loadBundle basename="messages" var="msgs"/&gt;</div>
<div>然后，利用EL表达式引用即可：</div>
<div>     #{msgs['UserName']} 或 #{msgs.UserName}</div>
<div>
<br>
 </div>
<div>或者也可以直接利用Seam的 messages 组件用内嵌的EL表达式来显示资源包中键／值对的值。Seam提供了一个 java.util.ResourceBundle （以org.jboss.seam.core.resourceBundle 的名字提供给应用程序）。 你需要通过这个指定的资源包来使你的国际化标签可用。默认情况下，Seam 使用bundle名为messages的资源包， 你需要在 messages.properties、messages_en.properties、messages_zh_CN.properties 等文件中定义你的键／值对，而无需显示使用语句&lt;f:loadBundle/&gt;。</div>
<div>     #{messages['UserName']}</div>
<div>
<br>
 </div>
<div>键值还可以在代码中使用，例如：</div>
<div>    @In ResourceBundle resourceBundle;</div>
<div>    @In private Map messages; <br>
    @In("#{messages['Welcome']}") private String welcomeMessage; </div>
<div>
<br>
 </div>
<div>同样键值还可以组件属性中使用，例如：</div>
<div>&lt;component name=”registration”&gt;<br>
  &lt;property name=”specialtyTypes”&gt;<br>
    &lt;key&gt;DRIVE&lt;/key&gt;&lt;value&gt;#{messages[’specialty.drive’]}&lt;/value&gt;<br>
    &lt;key&gt;CHIP&lt;/key&gt;&lt;value&gt;#{messages[’specialty.drive’]}&lt;/value&gt;<br>
    &lt;key&gt;PUTT&lt;/key&gt;&lt;value&gt;#{messages[’specialty.putt’]}&lt;/value&gt;<br>
    &lt;key&gt;IRON&lt;/key&gt;&lt;value&gt;#{messages[’specialty.iron’]}&lt;/value&gt;<br>
    &lt;key&gt;LOOKS&lt;/key&gt;&lt;value&gt;#{messages[’specialty.looks’]}&lt;/value&gt;<br>
  &lt;/property&gt;<br>
&lt;/component&gt;<br>
 </div>
<div>如果键值是带参数的，可以采取以下两种方式在中文资源包中定义：</div>
<div>
<div>    login.welcome=欢迎您，#{newUser.name}！</div>
<div>    login.welcome=欢迎您，{0}！</div>
<div>第一种定义方式，可以通过EL表达式#{msgs['Welcome']}来显示，第二种定义方式，可以在代码中通过FacesMessages组件来实现，如下面代码所示：</div>
FacesMessages.addFromResourceBundle(“login.welcome”,newUser.getName());</div>
</div>
<p>本文出自 “<a href="http://firehare.blog.51cto.com">野火兔的窝</a>” 博客，请务必保留此出处<a href="http://firehare.blog.51cto.com/809276/586523">http://firehare.blog.51cto.com/809276/586523</a></p>
    		";s:11:"post_banner";s:0:"";}}s:20:"custom_result_object";a:0:{}s:11:"current_row";i:0;s:8:"num_rows";i:10;s:8:"row_data";N;}